local E = select(2, ...):unpack()
local P, CM = E.Party, E.Comm

local pairs, ipairs, type, wipe, concat, format, gsub = pairs, ipairs, type, table.wipe, table.concat, string.format, string.gsub
local UnitIsConnected, CanInspect, CheckInteractDistance = UnitIsConnected, CanInspect, CheckInteractDistance
local GetPvpTalentInfoByID, GetTalentInfo, GetGlyphSocketInfo = GetPvpTalentInfoByID, GetTalentInfo, GetGlyphSocketInfo
local C_SpecializationInfo_GetInspectSelectedPvpTalent = C_SpecializationInfo and C_SpecializationInfo.GetInspectSelectedPvpTalent
local C_SpecializationInfo_GetPvpTalentSlotInfo = C_SpecializationInfo and C_SpecializationInfo.GetPvpTalentSlotInfo
local C_Traits_GetNodeInfo = C_Traits and C_Traits.GetNodeInfo
local C_Soulbinds_GetConduitSpellID = C_Soulbinds and C_Soulbinds.GetConduitSpellID

local InspectQueueFrame = CreateFrame("Frame")
local InspectTooltip = CreateFrame("GameTooltip", "OmniCDInspectToolTip", nil, "GameTooltipTemplate")
InspectTooltip:SetOwner(UIParent, "ANCHOR_NONE")

local LibDeflate = LibStub("LibDeflate")
local INSPECT_DELAY = 2
local INSPECT_INTERVAL = 1
local INSPECT_PAUSE_TIME = 2
local INSPECT_TIMEOUT = 180
local nextInquiryTime = 0
local elapsedTime = 0
local isPaused
local queriedGUID

local queueEntries = {}
local staleEntries = {}

CM.SERIALIZATION_VERSION = 1

function CM:Enable()
	if self.enabled then
		return
	end

	self.AddonPrefix = E.AddOn
	C_ChatInfo.RegisterAddonMessagePrefix(self.AddonPrefix)
	self:RegisterEvent('CHAT_MSG_ADDON')
	self:RegisterEvent('PLAYER_EQUIPMENT_CHANGED')
	self:RegisterEvent('PLAYER_LEAVING_WORLD')
	if E.isWOTLKC then
		self:RegisterEvent('PLAYER_TALENT_UPDATE')
	elseif E.preCata then
		self:RegisterEvent('CHARACTER_POINTS_CHANGED')
	else
		self:RegisterUnitEvent('PLAYER_SPECIALIZATION_CHANGED', "player")

		self:RegisterEvent('COVENANT_CHOSEN')
		self:RegisterEvent('SOULBIND_ACTIVATED')
		self:RegisterEvent('SOULBIND_NODE_LEARNED')
		self:RegisterEvent('SOULBIND_NODE_UNLEARNED')
		self:RegisterEvent('SOULBIND_NODE_UPDATED')
		self:RegisterEvent('SOULBIND_CONDUIT_INSTALLED')
		self:RegisterEvent('SOULBIND_PATH_CHANGED')
		self:RegisterEvent('COVENANT_SANCTUM_RENOWN_LEVEL_CHANGED')

		self:RegisterEvent('TRAIT_CONFIG_UPDATED')
	end
	self:SetScript("OnEvent", function(self, event, ...)
		self[event](self, ...)
	end)

	self:InitInspect()
	self:InitCooldownSync()
	self.enabled = true
end

function CM:Disable()
	if not self.enabled then
		return
	end
	self:UnregisterAllEvents()

	self:DisableInspect()
	self:DesyncFromGroup()
	self.enabled = false
end

local function InspectQueueFrame_OnUpdate(_, elapsed)
	elapsedTime = elapsedTime + elapsed
	if elapsedTime > INSPECT_INTERVAL then
		CM:RequestInspect()
		elapsedTime = 0
	end
end

function CM:InitInspect()
	if self.initInspect then
		return
	end
	InspectQueueFrame:Hide()
	InspectQueueFrame:SetScript("OnUpdate", InspectQueueFrame_OnUpdate)
	self.initInspect = true
end

function CM:EnableInspect()
	if self.enabledInspect or next(queueEntries) == nil then
		return
	end
	self:RegisterEvent('INSPECT_READY')
	InspectQueueFrame:Show()
	self.enabledInspect = true
end

function CM:DisableInspect()
	if not self.enabledInspect then
		return
	end
	ClearInspectPlayer()
	self:UnregisterEvent('INSPECT_READY')
	InspectQueueFrame:Hide()

	wipe(P.pendingQueue)
	wipe(queueEntries)
	wipe(staleEntries)
	queriedGUID = nil
	isPaused = nil
	self.enabledInspect = false
end

function CM:DequeueInspect(guid, addToStale)
	if queriedGUID == guid then
		queriedGUID = nil
	end
	staleEntries[guid] = addToStale and queueEntries[guid] or nil
	queueEntries[guid] = nil
end

function CM:EnqueueInspect(force, guid)
	if E.isClassic then
		return
	end

	local addedTime = GetTime()
	if force then
		wipe(P.pendingQueue)
		wipe(queueEntries)
		wipe(staleEntries)
		for infoGUID in pairs(P.groupInfo) do
			if infoGUID == E.userGUID then
				self:InspectUser()
			else
				queueEntries[infoGUID] = addedTime
			end
		end
	elseif guid then
		if guid == E.userGUID then
			self:InspectUser()
		else
			queueEntries[guid] = addedTime
		end
	else
		local numPending = #P.pendingQueue
		if numPending == 0 then return end
		for i = numPending, 1, -1 do
			local pendingGUID = P.pendingQueue[i]
			queueEntries[pendingGUID] = addedTime
			P.pendingQueue[i] = nil
		end
	end

	if isPaused then
		nextInquiryTime = 0
		isPaused = nil
	end
	self:EnableInspect()
end

function CM:RequestInspect()
	local now = GetTime()
	if now < nextInquiryTime  or UnitIsDead("player") or (InspectFrame and InspectFrame:IsShown()) then
		return
	end

	local stale = queriedGUID
	if stale then
		staleEntries[stale] = queueEntries[stale]
		queueEntries[stale] = nil
		queriedGUID = nil
	end

	if next(queueEntries) == nil then
		if next(staleEntries) then
			local copy = queueEntries
			queueEntries = staleEntries
			staleEntries = copy

			nextInquiryTime = now + INSPECT_PAUSE_TIME
			isPaused = true
		else
			self:DisableInspect()
		end
		return
	end
	isPaused = nil

	for unitGUID, addedTime in pairs(queueEntries) do
		local info = P.groupInfo[unitGUID]
		local isSyncedUnit = self.syncedGroupMembers[unitGUID]
		if info and not isSyncedUnit then
			local unit = info.unit
			local elapsed = now - addedTime
			if not UnitIsConnected(unit) or elapsed > INSPECT_TIMEOUT or info.isAdminObsForMDI then
				self:DequeueInspect(unitGUID)
			elseif E.preCata and
				not CheckInteractDistance(unit,1) or
				not CanInspect(unit) then
				staleEntries[unitGUID] = addedTime
				queueEntries[unitGUID] = nil
			else
				nextInquiryTime = now + INSPECT_DELAY
				queriedGUID = unitGUID
				NotifyInspect(unit)
				return
			end
		else
			self:DequeueInspect(unitGUID)
		end
	end
end

function CM:INSPECT_READY(guid)
	if queriedGUID == guid then
		self:InspectUnit(guid)
	end
end

local INVSLOT_INDEX = {
	INVSLOT_HEAD,
	INVSLOT_NECK,
	INVSLOT_SHOULDER,
	INVSLOT_CHEST,
	INVSLOT_WAIST,
	INVSLOT_LEGS,
	INVSLOT_FEET,
	INVSLOT_WRIST,
	INVSLOT_HAND,
	INVSLOT_FINGER1,
	INVSLOT_FINGER2,
	INVSLOT_BACK,
	INVSLOT_TRINKET1,
	INVSLOT_TRINKET2,
	INVSLOT_MAINHAND,

}
local NUM_INVSLOTS = #INVSLOT_INDEX

E.essenceData = {
	[2]  = { 293019, 298080, 298081, 298081, 294668, 298082, 298083, 298083 },
	[3]  = { 293031, 300009, 300010, 300010, 294910, 300012, 300013, 300013 },
	[4]  = { 295186, 298628, 299334, 299334, 295078, 298627, 299333, 299333 },
	[5]  = { 295258, 299336, 299338, 299338, 295246, 299335, 299337, 299337 },
	[6]  = { 295337, 299345, 299347, 299347, 295293, 299343, 299346, 299346 },
	[7]  = { 294926, 300002, 300003, 300003, 294964, 300004, 300005, 300005 },
	[12] = { 295373, 299349, 299353, 299353, 295365, 299348, 299350, 299350 },
	[13] = { 295746, 300015, 300016, 300016, 295750, 300018, 300020, 300020 },
	[14] = { 295840, 299355, 299358, 299358, 295834, 299354, 299357, 299357 },
	[15] = { 302731, 302982, 302983, 302983, 302916, 302984, 302985, 302985 },
	[16] = { 296036, 310425, 310442, 310442, 293030, 310422, 310426, 310426 },
	[17] = { 296072, 299875, 299876, 299876, 296050, 299878, 299879, 299879 },
	[18] = { 296094, 299882, 299883, 299883, 296081, 299885, 299887, 299887 },
	[19] = { 296197, 299932, 299933, 299933, 296136, 299935, 299936, 299936 },
	[20] = { 293032, 299943, 299944, 299944, 296207, 299939, 299940, 299940 },
	[21] = { 296230, 299958, 299959, 299959, 303448, 303474, 303476, 303476 },
	[22] = { 296325, 299368, 299370, 299370, 296320, 299367, 299369, 299369 },
	[23] = { 297108, 298273, 298277, 298277, 297147, 298274, 298275, 298275 },
	[24] = { 297375, 298309, 298312, 298312, 297411, 298302, 298304, 298304 },
	[25] = { 298168, 299273, 299275, 299275, 298193, 299274, 299277, 299277 },
	[27] = { 298357, 299372, 299374, 299374, 298268, 299371, 299373, 299373 },
	[28] = { 298452, 299376, 299378, 299378, 298407, 299375, 299377, 299377 },
	[32] = { 303823, 304088, 304121, 304121, 304081, 304089, 304123, 304123 },
	[33] = { 295046, 299984, 299988, 299988, 295164, 299989, 299991, 299991 },
	[34] = { 310592, 310601, 310602, 310602, 310603, 310607, 310608, 310608 },
	[35] = { 310690, 311194, 311195, 311195, 310712, 311197, 311198, 311198 },
	[36] = { 311203, 311302, 311303, 311303, 311210, 311304, 311306, 311306 },
	[37] = { 312725, 313921, 313922, 313922, 312771, 313919, 313920, 313920 },
}

CM.essencePowerIDs = {}

for essenceID, essencePowers in pairs(E.essenceData) do
	local link = E.postBFA and C_AzeriteEssence.GetEssenceHyperlink(essenceID, 1)
	if link and link ~= "" then
		link = link:match("%[(.-)%]"):gsub("%-","%%-")
		essencePowers.name = link
		essencePowers.ID = essenceID
		for i = 1, #essencePowers do
			local spellID = essencePowers[i]
			local rank1ID = essencePowers[i > 4 and 5 or 1]
			CM.essencePowerIDs[spellID] = rank1ID
		end
	end
end

function E:IsEssenceRankUpgraded(id)
	return id and id ~= CM.essencePowerIDs[id]
end

local ITEM_LEVEL = string.gsub(ITEM_LEVEL,"%%d","(%%d+)")

local function FindAzeriteEssencePower(info, specID, list)
	local heartOfAzerothLevel
	local majorID

	for j = 2, math.min(16, InspectTooltip:NumLines()) do
		local tooltipLine = _G["OmniCDInspectToolTipTextLeft" .. j]
		local text = tooltipLine:GetText()
		if text and text ~= "" then
			if not heartOfAzerothLevel then
				heartOfAzerothLevel = strmatch(text, ITEM_LEVEL)
				if heartOfAzerothLevel then
					heartOfAzerothLevel = tonumber(heartOfAzerothLevel)
				end
			elseif j > 10 then
				for essenceID, essencePowers in pairs(E.essenceData) do
					if strfind(text, essencePowers.name .. "$") == 1 then
						local r, _, b = tooltipLine:GetTextColor()
						local rank = 3
						if r < .01 then
							rank = 2
						elseif r > .90 then
							rank = 4
						elseif b < .01 then
							rank = 1
						end

						if not majorID and _G["OmniCDInspectToolTipTextLeft" .. (j - 1)]:GetText() == " " then
							majorID = essencePowers[rank]
							local rank1 = essencePowers[1]
							info.talentData[rank1] = "AE"
							info.talentData["essMajorRank1"] = rank1
							info.talentData["essMajorID"] = majorID
							if list then
								list[#list + 1] = majorID .. ":AE"
							end

							if E.essMajorConflict[majorID] then
								local pvpTalent = E.pvpTalentsByEssMajorConflict[specID]
								if pvpTalent then
									info.talentData[pvpTalent] = "AE"
									if list then
										list[#list + 1] = pvpTalent
									end
								end
							end
							if rank1 ~= 296325 then
								break
							end
						end

						local minorID = essencePowers[rank + 4]
						if E.essMinorStrive[minorID] then

							local mult = (90.1 - ((heartOfAzerothLevel - 87) * 0.3)) / 100
							if P.isInPvPInstance then
								mult = 0.2 + mult * 0.8
							end
							mult = math.max(0.75, math.min(0.9, mult))
							info.talentData["essStriveMult"] = mult
							if list then
								list[#list + 1] = mult .. ":ae"
							end
							return
						end
						break
					end
				end
			end
		end
	end
end

local function FindAzeritePower(info, list)
	for j = 10, InspectTooltip:NumLines() do
		local text = _G["OmniCDInspectToolTipTextLeft" .. j]:GetText()
		if text and text ~= "" and strfind(text, "^-") == 1 then
			for _, v in pairs(E.spell_cxmod_azerite) do
				if strfind(text, v.name .. "$") == 3 then
					info.talentData[v.azerite] = "A"
					if list then list[#list + 1] = v.azerite .. ":A" end
					return
				end
			end
		end
	end
end

local S_ITEM_SET_NAME = "^" .. ITEM_SET_NAME:gsub("([%(%)])", "%%%1"):gsub("%%%d?$?d", "(%%d+)"):gsub("%%%d?$?s", "(.+)") .. "$"

local function FindSetBonus(info, specBonus, list)

	local bonusID, numRequired = specBonus[1], specBonus[2]
	for j = 10, InspectTooltip:NumLines() do
		local text = _G["OmniCDInspectToolTipTextLeft" .. j]:GetText()
		if text and text ~= "" then
			local name, numEquipped, numFullSet = strmatch(text, S_ITEM_SET_NAME)
			if name and numEquipped and numFullSet then
				numEquipped = tonumber(numEquipped)
				if numEquipped and numEquipped >= numRequired then
					info.talentData[bonusID] = "S"
					if list then list[#list + 1] = bonusID .. ":S" end
				end
				return specBonus
			end
		end
	end
end

local function FindCraftedRuneforgeLegendary(info, itemLink, list)
	local _,_,_,_,_,_,_,_,_,_,_,_,_, numBonusIDs, bonusIDs = strsplit(":", itemLink, 15)
	numBonusIDs = tonumber(numBonusIDs)
	if numBonusIDs and bonusIDs then
		local t = { strsplit(":", bonusIDs, numBonusIDs + 1) }
		for j = 1, numBonusIDs do
			local bonusID = t[j]
			bonusID = tonumber(bonusID)
			local runeforgeDescID = E.runeforge_bonus_to_descid[bonusID]
			if runeforgeDescID then
				if type(runeforgeDescID) == "table" then
					for _, descID in pairs(runeforgeDescID) do
						info.talentData[descID] = "R"
						if list then list[#list + 1] = descID .. ":R" end
					end
				else
					info.talentData[runeforgeDescID] = "R"
					if list then list[#list + 1] = runeforgeDescID .. ":R" end
				end
				return
			end
		end
	end
end

local runeforgeBaseItems = {
	[1]  = { 173245, 172317, 172325, 171415 },
	[2]  = { 178927, 178927, 178927, 178927 },
	[3]  = { 173247, 172319, 172327, 171417 },
	[5]  = { 173241, 172314, 172322, 171412 },
	[6]  = { 173248, 172320, 172328, 171418 },
	[7]  = { 173246, 172318, 172326, 171416 },
	[8]  = { 173243, 172315, 172323, 171413 },
	[9]  = { 173249, 172321, 172329, 171419 },
	[10] = { 173244, 172316, 172324, 171414 },
	[11] = { 178926, 178926, 178926, 178926 },
	[12] = { 178926, 178926, 178926, 178926 },
	[15] = { 173242, 173242, 173242, 173242 },
}







local function GetEquippedItemData(info, unit, specID, list)
	local moveToStale
	local numRuneforge = 0
	local numTierSetBonus = 0
	local foundTierSpecBonus
	if list then list[#list + 1] = "^M" end

	for i = 1, NUM_INVSLOTS do
		local slotID = INVSLOT_INDEX[i]

		InspectTooltip:SetInventoryItem(unit, slotID)
		local _, itemLink = InspectTooltip:GetItem()
		if itemLink then
			local itemID, _,_,_,_,_, subclassID = GetItemInfoInstant(itemLink)
			if itemID then
				if i <= 12 then
					local tierSetBonus = E.item_set_bonus[itemID]
					local equipBonusID = E.item_equip_bonus[itemID]
					subclassID = subclassID == 0 and 1 or subclassID
					local unityRuneforgeLegendary = E.item_unity[itemID]
					local isCraftedRuneforgeLegendary = numRuneforge <= 2
						and runeforgeBaseItems[slotID]
						and itemID == runeforgeBaseItems[slotID][subclassID]

					if equipBonusID then
						info.talentData[equipBonusID] = true
						if list then list[#list + 1] = equipBonusID .. ":S" end
					end
					if tierSetBonus then
						local specBonus = tierSetBonus[specID]
						if specBonus and numTierSetBonus < 2 and specBonus ~= foundTierSpecBonus then
							foundTierSpecBonus = FindSetBonus(info, specBonus, list)
							if foundTierSpecBonus then
								numTierSetBonus = numTierSetBonus + 1
							end
						end

					elseif isCraftedRuneforgeLegendary then
						FindCraftedRuneforgeLegendary(info, itemLink, list)
						numRuneforge = numRuneforge + 1
					elseif unityRuneforgeLegendary then
						if type(unityRuneforgeLegendary) == "table" then
							for _, runeforgeDescID in pairs(unityRuneforgeLegendary) do
								info.talentData[runeforgeDescID] = "R"
								if list then list[#list + 1] = runeforgeDescID .. ":R" end
							end
						else
							info.talentData[unityRuneforgeLegendary] = "R"
							if list then list[#list + 1] = unityRuneforgeLegendary .. ":R" end
						end
						numRuneforge = numRuneforge + 1
					elseif itemID == 158075 then
						FindAzeriteEssencePower(info, specID, list)
					elseif C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItemByID(itemLink) then
						FindAzeritePower(info, list)
					end
				else
					itemID = E.item_merged[itemID] or itemID
					info.itemData[itemID] = true
					if list then
						if i == 13 then list[#list + 1] = "^E" end
						list[#list + 1] = itemID
					end
				end
			elseif not moveToStale then
				moveToStale = true
			end
		end
		InspectTooltip:ClearLines()
	end

	return moveToStale
end

local treeNodeSpellIDs = {
	[850] = { [386628]=177,[871]=3,[316440]=75,[382549]=85,[383442]=118,[386630]=178,[12294]=13,[383762]=124,[394855]=220,[248621]=57,[383317]=114,[390713]=198,[46968]=23,[390140]=191,[386634]=179,[215568]=51,[281001]=71,[384404]=150,[203201]=48,[384277]=144,[383959]=132,[382940]=94,[184364]=36,[388933]=184,[388807]=182,[384090]=139,[845]=2,[215571]=52,[275334]=63,[260643]=58,[386196]=170,[382946]=95,[184367]=37,[260708]=59,[386071]=167,[382310]=83,[190456]=39,[383459]=119,[386328]=173,[184783]=38,[397103]=224,[386011]=163,[12950]=15,[386394]=175,[384036]=133,[384100]=140,[202316]=43,[202603]=45,[203177]=47,[64382]=24,[383082]=101,[97462]=27,[29725]=21,[383338]=115,[385952]=162,[382956]=100,[262150]=60,[386208]=171,[316402]=73,[202095]=40,[386357]=174,[118038]=31,[383468]=120,[384042]=135,[383341]=116,[5246]=8,[23920]=19,[382258]=81,[383852]=126,[382896]=90,[316405]=74,[390674]=196,[396719]=222,[385059]=153,[394312]=218,[382260]=82,[383854]=127,[385703]=157,[385512]=154,[393967]=214,[384110]=141,[208154]=50,[394307]=216,[394062]=215,[394311]=217,[382900]=91,[85288]=26,[393965]=213,[152278]=34,[382939]=92,[392966]=211,[382948]=96,[275339]=66,[202163]=41,[390354]=192,[3411]=7,[392790]=207,[392777]=206,[386027]=164,[262161]=61,[383605]=122,[388004]=180,[385008]=152,[383287]=109,[12323]=14,[392536]=205,[391997]=204,[316733]=76,[107570]=29,[391683]=203,[386030]=165,[391572]=202,[275336]=64,[386477]=176,[382461]=84,[385840]=159,[6572]=11,[384318]=145,[390725]=199,[390675]=197,[23881]=18,[29838]=22,[389603]=187,[383292]=110,[262231]=62,[382767]=88,[334779]=77,[383293]=111,[392792]=208,[167105]=35,[390138]=190,[390135]=189,[383103]=103,[202168]=42,[280721]=69,[315720]=72,[384124]=143,[390563]=194,[346002]=79,[389308]=186,[389306]=185,[388903]=183,[6343]=9,[202743]=46,[388049]=181,[103827]=28,[396749]=223,[384063]=136,[386285]=172,[386164]=169,[386034]=166,[385888]=161,[385843]=160,[385704]=158,[385573]=156,[385571]=155,[394329]=219,[382954]=99,[384361]=147,[206315]=49,[391270]=200,[280001]=67,[390123]=188,[384067]=137,[391271]=201,[383430]=117,[376079]=80,[6544]=10,[383877]=128,[227847]=53,[393950]=212,[236279]=56,[107574]=30,[280392]=68,[392931]=209,[12975]=16,[383295]=112,[18499]=17,[383922]=131,[383703]=123,[383115]=106,[383916]=130,[772]=1,[384072]=138,[382895]=89,[202560]=44,[81099]=25,[1719]=6,[7384]=12,[383848]=125,[383486]=121,[382953]=98,[1160]=4,[383297]=113,[392936]=210,[275338]=65,[1161]=5,[383219]=108,[390642]=195,[383154]=107,[383885]=129,[384969]=151,[382764]=87,[335077]=78,[228920]=55,[384041]=134, },
	[852] = { [193539]=42,[394023]=170,[79096]=27,[245687]=58,[131511]=35,[382742]=154,[319949]=76,[386823]=166,[121411]=33,[319951]=77,[382746]=155,[31230]=16,[381982]=127,[385616]=163,[196922]=47,[381664]=109,[382238]=134,[108216]=32,[343160]=80,[5938]=7,[193640]=44,[195457]=45,[196924]=48,[14161]=12,[319066]=74,[57934]=23,[255989]=60,[193546]=43,[381797]=112,[36554]=20,[2094]=3,[381798]=113,[61329]=25,[255544]=59,[378803]=86,[354897]=82,[381800]=115,[381673]=111,[378996]=89,[392384]=167,[277953]=68,[381802]=117,[382504]=137,[378807]=87,[272026]=66,[382505]=138,[382506]=139,[360194]=83,[378427]=84,[35551]=17,[91023]=29,[382508]=141,[382509]=142,[79134]=28,[378813]=88,[6770]=8,[379005]=90,[381619]=93,[382512]=144,[381620]=94,[382513]=145,[256188]=63,[381621]=95,[5761]=6,[382514]=146,[200758]=53,[382515]=147,[79008]=26,[381623]=97,[378436]=85,[14062]=11,[382517]=148,[382518]=149,[381626]=99,[381627]=100,[5277]=5,[58423]=24,[152152]=37,[1966]=2,[381630]=102,[1776]=1,[31224]=15,[381822]=118,[381631]=103,[382524]=151,[196938]=50,[280716]=70,[382015]=132,[13877]=10,[51690]=22,[394320]=172,[381634]=105,[319032]=73,[384631]=157,[328085]=78,[280719]=71,[382528]=153,[200733]=52,[108209]=31,[381637]=106,[395422]=176,[394983]=175,[196937]=49,[394321]=173,[394309]=171,[256165]=61,[393972]=169,[381894]=126,[193531]=40,[393970]=168,[382525]=152,[381640]=107,[51667]=21,[385627]=164,[381629]=101,[257505]=64,[385424]=161,[381985]=128,[383281]=156,[385722]=165,[382523]=150,[382511]=143,[231719]=56,[382507]=140,[382503]=136,[14983]=14,[382245]=135,[382017]=133,[196976]=51,[381990]=131,[121471]=34,[381632]=104,[381828]=119,[381988]=129,[394332]=174,[279876]=69,[277925]=67,[381885]=125,[385408]=160,[343142]=79,[381878]=124,[108208]=30,[381839]=120,[381542]=91,[381877]=123,[256170]=62,[13750]=9,[381543]=92,[14190]=13,[381989]=130,[196861]=46,[319175]=75,[235484]=57,[231691]=55,[185313]=38,[381801]=116,[193537]=41,[315508]=72,[381799]=114,[381652]=108,[2823]=4,[381669]=110,[185314]=39,[385478]=162,[137619]=36,[381624]=98,[381845]=121,[381622]=96,[200806]=54,[271877]=65,[381846]=122,[344363]=81, },
	[854] = { [391409]=133,[389688]=89,[320331]=49,[389819]=110,[203550]=9,[207407]=21,[389693]=90,[389694]=91,[389695]=92,[320654]=62,[390142]=120,[389696]=93,[258887]=42,[389824]=111,[389697]=94,[278326]=47,[207697]=25,[389763]=105,[388106]=76,[207347]=19,[207666]=23,[388107]=77,[320341]=50,[227174]=35,[388108]=78,[203555]=10,[388109]=79,[389958]=114,[388110]=80,[388111]=81,[389705]=95,[388112]=82,[258860]=39,[388113]=83,[370965]=75,[390154]=122,[389708]=96,[320412]=55,[258925]=43,[320413]=56,[388116]=85,[326853]=65,[198013]=5,[389711]=97,[320415]=57,[390158]=123,[320416]=58,[213410]=32,[393029]=136,[320418]=59,[389715]=98,[211881]=29,[207387]=20,[247454]=38,[205411]=14,[389781]=106,[389718]=99,[389846]=112,[207739]=26,[389783]=107,[207548]=22,[389720]=100,[389976]=115,[389849]=113,[389977]=116,[391189]=130,[389978]=117,[389724]=102,[390808]=127,[218612]=34,[347461]=74,[232893]=36,[389729]=103,[179057]=1,[389732]=104,[204909]=13,[328725]=66,[320374]=52,[196718]=4,[202137]=7,[389799]=108,[235893]=37,[207684]=24,[320313]=48,[202138]=8,[258876]=40,[395446]=139,[212084]=30,[393827]=138,[263642]=44,[393822]=137,[320635]=61,[391429]=135,[391397]=132,[198793]=6,[391275]=131,[196555]=3,[320387]=54,[204021]=11,[389997]=119,[213010]=31,[343311]=73,[336639]=67,[209281]=28,[209258]=27,[343206]=71,[391178]=129,[390163]=125,[204596]=12,[343207]=72,[388114]=84,[206477]=17,[320421]=60,[263648]=45,[343017]=70,[320386]=53,[268175]=46,[389721]=101,[390213]=126,[206478]=18,[389811]=109,[320770]=63,[206416]=15,[258881]=41,[320361]=51,[389220]=87,[391165]=128,[388118]=86,[217832]=33,[389985]=118,[390152]=121,[183782]=2,[206476]=16,[321028]=64,[389687]=88,[343014]=69,[342817]=68, },
	[781] = { [383695]=94,[388604]=142,[322113]=74,[388477]=132,[388031]=125,[124502]=41,[383697]=95,[386949]=110,[383698]=96,[391412]=175,[393516]=193,[325177]=85,[383700]=97,[322118]=75,[388674]=147,[394093]=194,[196730]=53,[322120]=76,[388548]=138,[198898]=61,[231602]=66,[115069]=6,[122783]=37,[115181]=13,[388615]=143,[322507]=77,[388681]=148,[388809]=154,[116680]=23,[388491]=133,[322510]=78,[388874]=165,[152173]=45,[195300]=50,[196607]=51,[115310]=15,[137639]=44,[388813]=157,[197915]=60,[386965]=111,[383714]=99,[343743]=92,[152175]=46,[124682]=42,[115008]=5,[116841]=25,[196737]=55,[220357]=65,[394110]=195,[388564]=140,[325197]=86,[387991]=122,[387035]=112,[274963]=70,[383785]=100,[196740]=56,[325201]=87,[387230]=116,[115313]=16,[195243]=49,[122278]=33,[113656]=4,[280515]=72,[123904]=38,[132578]=43,[388509]=135,[116844]=26,[122470]=36,[388701]=151,[397251]=199,[392991]=186,[388511]=136,[121817]=32,[115203]=14,[388193]=129,[393357]=190,[387046]=113,[394923]=197,[394123]=196,[157411]=47,[115315]=17,[393460]=192,[210802]=62,[323999]=81,[391383]=174,[393400]=191,[124081]=40,[191837]=48,[393098]=189,[116705]=24,[392993]=187,[396166]=198,[388686]=150,[392979]=180,[388856]=164,[388517]=137,[123986]=39,[387625]=119,[389577]=168,[392983]=182,[392910]=177,[197895]=57,[392970]=179,[115173]=10,[392958]=178,[392982]=181,[392900]=176,[391370]=173,[383994]=101,[325153]=84,[388551]=139,[274909]=69,[116847]=28,[107428]=3,[389579]=170,[389578]=169,[281231]=73,[392985]=183,[387184]=114,[389575]=167,[389574]=166,[392986]=184,[386276]=104,[388779]=153,[325093]=83,[388849]=162,[388848]=161,[391330]=172,[388020]=123,[388814]=158,[388812]=156,[388811]=155,[388740]=152,[392989]=185,[388682]=149,[115175]=11,[388846]=159,[280197]=71,[337209]=90,[388593]=141,[388847]=160,[197900]=58,[264348]=67,[344359]=93,[116849]=29,[121253]=31,[322960]=80,[387765]=121,[328669]=88,[115399]=19,[388212]=130,[387256]=117,[328670]=89,[392994]=188,[386937]=105,[115078]=7,[388505]=134,[322740]=79,[101545]=1,[388023]=124,[115396]=18,[388661]=145,[218164]=64,[116095]=20,[197908]=59,[388047]=127,[386941]=108,[343655]=91,[388854]=163,[388038]=126,[115151]=9,[383707]=98,[196736]=54,[388664]=146,[388218]=131,[115176]=12,[196725]=52,[387638]=120,[115098]=8,[387276]=118,[101643]=2,[116645]=22,[387219]=115,[119582]=30,[122281]=35,[389942]=171,[324312]=82,[274586]=68, },
	[750] = { [195292]=47,[376938]=124,[194878]=41,[81136]=29,[377640]=146,[277234]=87,[276023]=84,[49143]=14,[377514]=137,[253593]=78,[111673]=33,[207311]=70,[391477]=168,[51271]=22,[194912]=42,[108199]=32,[207057]=58,[390268]=159,[194913]=43,[206930]=52,[377073]=127,[51128]=21,[374715]=118,[195679]=48,[206931]=53,[391546]=170,[221562]=76,[219809]=74,[374717]=119,[377076]=128,[49184]=15,[377587]=141,[194916]=44,[390275]=161,[207061]=59,[376251]=122,[194917]=45,[50842]=19,[205723]=50,[207317]=71,[343294]=103,[207126]=61,[55233]=24,[206967]=55,[390279]=162,[377083]=129,[374598]=117,[48707]=9,[55090]=23,[49998]=18,[221536]=75,[281208]=89,[47528]=5,[196770]=49,[205727]=51,[81333]=30,[47568]=7,[374030]=108,[377537]=138,[57330]=25,[377092]=130,[206940]=54,[219786]=73,[273946]=79,[221699]=77,[377668]=148,[279302]=88,[391566]=171,[374737]=120,[316916]=95,[212552]=72,[206974]=57,[390166]=154,[377098]=131,[207230]=65,[273952]=80,[391571]=172,[195182]=46,[273953]=81,[152279]=36,[77575]=28,[207200]=64,[51052]=20,[49530]=17,[48263]=8,[152280]=37,[374747]=121,[391386]=164,[390175]=155,[374111]=110,[327574]=102,[392950]=174,[392566]=173,[374049]=109,[207264]=66,[391517]=169,[391398]=166,[391395]=165,[390283]=163,[373923]=105,[305392]=91,[390270]=160,[46585]=4,[390236]=157,[275699]=83,[390161]=153,[274156]=82,[85948]=31,[207269]=67,[49020]=12,[383269]=150,[373926]=106,[207142]=62,[194679]=39,[391458]=167,[377655]=147,[206970]=56,[319230]=101,[207167]=63,[377592]=143,[276837]=86,[377590]=142,[377585]=140,[377580]=139,[377440]=136,[377376]=135,[377351]=134,[373930]=107,[374504]=115,[281238]=90,[48743]=10,[377226]=133,[207272]=68,[377629]=144,[356367]=104,[42650]=1,[377056]=126,[377047]=125,[389679]=151,[115989]=35,[59057]=26,[316941]=96,[45524]=2,[49028]=13,[317133]=97,[376905]=123,[316867]=94,[46584]=3,[276079]=85,[317198]=98,[389682]=152,[374265]=112,[316838]=93,[374574]=116,[374383]=114,[317214]=99,[49206]=16,[374277]=113,[194844]=40,[316803]=92,[317610]=100,[114556]=34,[377190]=132,[390259]=158,[378848]=149,[377637]=145,[390196]=156,[63560]=27,[48792]=11,[194662]=38,[207289]=69,[374261]=111,[207104]=60, },
	[774] = { [199532]=42,[259489]=58,[385737]=150,[268501]=78,[187707]=29,[131894]=19,[56315]=13,[321287]=90,[385739]=151,[187708]=30,[155228]=22,[53351]=12,[321290]=91,[392053]=170,[120360]=17,[194595]=38,[388039]=155,[120679]=18,[265895]=75,[320976]=87,[384790]=143,[388042]=156,[384791]=144,[260228]=60,[259495]=59,[392060]=172,[213691]=49,[388045]=157,[360952]=102,[266921]=76,[378739]=116,[378740]=117,[217200]=50,[147362]=21,[257044]=53,[378743]=118,[378745]=119,[391559]=169,[378937]=134,[193455]=34,[385695]=147,[260393]=69,[257620]=54,[191384]=33,[388056]=158,[378940]=135,[257621]=55,[269737]=79,[378750]=120,[260331]=67,[343242]=97,[19577]=6,[271014]=82,[236776]=52,[360966]=103,[378880]=126,[294029]=86,[199483]=39,[1513]=1,[378244]=114,[389019]=160,[288613]=85,[343247]=99,[390231]=168,[343248]=100,[2643]=2,[186289]=26,[19434]=4,[201430]=44,[260367]=68,[260240]=61,[34477]=10,[271788]=83,[378442]=115,[260241]=62,[186387]=27,[393933]=174,[264332]=73,[269751]=80,[378955]=140,[393344]=173,[389882]=167,[389880]=166,[270581]=81,[19801]=7,[378948]=136,[389865]=164,[260243]=63,[378766]=122,[389660]=163,[389654]=162,[19574]=5,[378002]=105,[389449]=161,[190852]=31,[388057]=159,[378767]=123,[378934]=133,[193530]=35,[385810]=152,[260404]=71,[115939]=16,[385718]=149,[378961]=141,[385709]=148,[260309]=66,[264735]=74,[187698]=28,[378771]=125,[321460]=93,[321014]=88,[384799]=145,[378007]=107,[378962]=142,[193532]=36,[378953]=139,[378951]=138,[378950]=137,[389866]=165,[386870]=153,[378916]=132,[359844]=101,[193533]=37,[378910]=130,[259387]=57,[321530]=95,[321018]=89,[109215]=14,[203415]=45,[257944]=56,[199921]=43,[212436]=48,[162488]=23,[378888]=127,[378905]=128,[185789]=24,[34026]=9,[212431]=47,[378769]=124,[378205]=110,[378014]=109,[321468]=94,[199528]=40,[378907]=129,[186270]=25,[109248]=15,[260248]=64,[378207]=111,[375891]=104,[267116]=77,[385539]=146,[386878]=154,[343244]=98,[378765]=121,[5116]=3,[378209]=112,[231548]=51,[190925]=32,[199530]=41,[378210]=113,[263186]=72,[273887]=84,[260402]=70,[378004]=106,[321293]=92,[204089]=46,[378913]=131,[342049]=96,[260285]=65,[378010]=108, },
	[701] = { [376237]=111,[369990]=34,[370819]=43,[376239]=112,[370821]=44,[376240]=113,[359793]=7,[370886]=49,[368847]=23,[375796]=99,[371270]=59,[376179]=106,[370888]=50,[375797]=100,[371016]=54,[375544]=84,[370062]=35,[375801]=101,[381922]=123,[387341]=131,[372233]=64,[369939]=33,[376888]=115,[370960]=52,[370897]=51,[370962]=53,[375554]=85,[375618]=90,[370837]=45,[370455]=37,[373834]=68,[377086]=118,[370839]=46,[374346]=72,[371032]=55,[369375]=26,[374348]=73,[385696]=124,[371034]=56,[375561]=87,[386272]=125,[359816]=8,[370845]=47,[351338]=1,[365937]=17,[376138]=102,[373270]=67,[375757]=95,[376204]=107,[371806]=61,[386405]=130,[386342]=128,[377099]=119,[376207]=108,[371426]=60,[377100]=120,[375443]=77,[375507]=78,[357211]=4,[368432]=21,[376210]=109,[386283]=126,[370537]=38,[370665]=40,[375574]=88,[386348]=129,[376150]=103,[375577]=89,[367226]=19,[369459]=27,[375517]=80,[369908]=30,[378196]=121,[363534]=12,[369846]=28,[375520]=81,[359073]=6,[370867]=48,[387761]=132,[375777]=96,[387787]=133,[369913]=32,[372527]=66,[363916]=13,[375725]=94,[360995]=10,[374227]=70,[372048]=63,[381921]=122,[374968]=74,[386336]=127,[370553]=39,[375510]=79,[374251]=71,[366155]=18,[376164]=104,[375542]=83,[362874]=11,[370781]=41,[376930]=116,[369089]=24,[375783]=98,[371257]=58,[376166]=105,[373861]=69,[372469]=65,[370783]=42,[371832]=62,[375721]=91,[357170]=3,[371038]=57,[376872]=114,[375722]=93,[364343]=14,[369297]=25,[365933]=16,[368838]=22,[365585]=15,[360806]=9,[368412]=20,[355936]=2,[375556]=86,[375087]=75,[375406]=76,[358385]=5,[377082]=117,[375528]=82,[369909]=31,[376236]=110,[370452]=36, },
	[658] = { [190447]=46,[382293]=118,[382103]=111,[235870]=69,[383634]=137,[235711]=68,[389627]=168,[269650]=77,[382424]=120,[66]=1,[12051]=10,[378919]=104,[45438]=21,[382490]=123,[30449]=13,[384276]=153,[108853]=28,[386763]=164,[112965]=30,[321420]=82,[321739]=85,[190356]=45,[391102]=171,[205020]=49,[270233]=78,[31589]=15,[11366]=8,[383391]=132,[321745]=86,[108839]=27,[116011]=33,[343230]=94,[110959]=29,[383967]=147,[382820]=127,[205023]=52,[384861]=161,[31661]=16,[384033]=149,[382440]=121,[205024]=53,[390218]=170,[382569]=125,[321752]=87,[205025]=54,[342344]=91,[383782]=143,[382826]=128,[205026]=55,[384612]=157,[12982]=12,[389713]=169,[205027]=56,[378749]=101,[157980]=41,[475]=2,[383659]=138,[205028]=57,[203275]=48,[236457]=70,[380154]=108,[157981]=42,[383661]=139,[383980]=148,[205029]=58,[384683]=159,[321507]=83,[205030]=59,[384174]=151,[84714]=25,[378947]=105,[378756]=102,[383665]=140,[387044]=166,[383092]=129,[381244]=109,[235313]=66,[383476]=133,[383604]=136,[155148]=38,[342231]=88,[383860]=145,[383669]=141,[235219]=64,[382268]=114,[321387]=81,[382270]=115,[384374]=154,[281482]=80,[382144]=113,[44614]=20,[387807]=167,[378448]=100,[386828]=165,[1463]=4,[386539]=163,[385167]=162,[384858]=160,[384187]=152,[384651]=158,[205037]=61,[86949]=26,[205036]=60,[384060]=150,[383886]=146,[383810]=144,[383676]=142,[113724]=31,[205022]=51,[383489]=134,[383243]=131,[235224]=65,[378198]=97,[153595]=36,[79684]=24,[257537]=73,[55342]=22,[153561]=35,[382800]=126,[378901]=103,[342245]=89,[212653]=62,[5143]=7,[236628]=71,[31687]=17,[157642]=40,[56377]=23,[153626]=37,[378433]=99,[321526]=84,[382493]=124,[378406]=98,[382297]=119,[759]=3,[117216]=34,[190319]=44,[342249]=90,[264354]=75,[384452]=155,[382289]=116,[236662]=72,[278309]=79,[382110]=112,[365350]=95,[384581]=156,[205021]=50,[257541]=74,[376103]=96,[2120]=5,[44457]=19,[381706]=110,[383499]=135,[379993]=107,[379049]=106,[2948]=6,[30455]=14,[231564]=63,[12472]=11,[11426]=9,[382481]=122,[157997]=43,[269644]=76,[44425]=18,[343222]=93,[343183]=92,[155149]=39,[114923]=32,[199786]=47,[382292]=117,[383121]=130,[235450]=67, },
	[720] = { [196408]=33,[324536]=70,[387075]=111,[387522]=151,[265187]=54,[387396]=139,[386185]=83,[386759]=99,[386951]=104,[387972]=159,[387016]=108,[270545]=64,[386124]=81,[199471]=37,[17962]=9,[387400]=141,[288843]=66,[231793]=46,[196412]=34,[264874]=53,[387338]=134,[266086]=55,[267170]=57,[387084]=114,[267171]=58,[111898]=24,[386194]=84,[152108]=26,[205180]=42,[387279]=131,[386833]=100,[196447]=35,[387153]=119,[63106]=14,[387600]=157,[387602]=158,[386646]=92,[386200]=85,[264119]=50,[387093]=115,[48181]=13,[219272]=45,[387349]=135,[386648]=93,[264057]=48,[387541]=153,[387095]=116,[205184]=43,[1122]=3,[386651]=94,[389775]=172,[201424]=38,[5484]=4,[5740]=5,[116858]=25,[196102]=28,[387483]=145,[387165]=122,[30283]=11,[104316]=16,[387485]=146,[387549]=154,[387103]=117,[27243]=10,[198590]=36,[264130]=51,[334319]=73,[171975]=27,[386659]=95,[387488]=147,[6789]=7,[278350]=65,[387108]=118,[386344]=87,[387173]=124,[387301]=132,[386664]=96,[388832]=162,[387494]=148,[387176]=125,[603]=1,[108558]=21,[386858]=101,[386922]=103,[386986]=106,[108415]=17,[334585]=74,[264078]=49,[316099]=67,[390173]=174,[387475]=144,[389764]=171,[389761]=170,[389630]=169,[108416]=18,[389623]=168,[386864]=102,[389609]=167,[389590]=166,[389576]=165,[317031]=68,[333889]=72,[389359]=163,[388827]=161,[387976]=160,[6353]=6,[387506]=149,[387526]=152,[32388]=12,[387322]=133,[387250]=126,[387569]=155,[386613]=88,[389992]=173,[17877]=8,[387355]=136,[387432]=142,[268358]=63,[386997]=107,[267211]=59,[386105]=78,[387399]=140,[215941]=44,[196103]=29,[387384]=137,[387445]=143,[387509]=150,[710]=2,[386617]=89,[387275]=130,[386110]=79,[267214]=60,[387273]=129,[264000]=47,[80240]=15,[387065]=109,[384069]=75,[386619]=90,[387156]=120,[267216]=61,[386620]=91,[386174]=82,[387252]=127,[267217]=62,[205145]=39,[196277]=31,[266134]=56,[387578]=156,[108503]=20,[386686]=97,[387166]=123,[386976]=105,[386113]=80,[111400]=22,[328774]=71,[387159]=121,[387259]=128,[196406]=32,[205179]=41,[205148]=40,[196226]=30,[386689]=98,[317138]=69,[389367]=164,[387391]=138,[385899]=77,[385881]=76,[387073]=110,[386256]=86,[264178]=52,[111771]=23, },
	[795] = { [372985]=108,[373049]=113,[139]=1,[62618]=21,[109186]=34,[193157]=48,[373178]=116,[341240]=92,[391284]=190,[377387]=139,[373180]=117,[193063]=45,[391095]=176,[373054]=114,[198068]=57,[372991]=109,[373310]=124,[372354]=100,[391288]=191,[321291]=87,[368275]=97,[238136]=77,[372611]=102,[341374]=94,[390972]=168,[199855]=59,[235587]=73,[200174]=61,[391228]=186,[263346]=81,[375994]=136,[372616]=103,[64843]=24,[373446]=127,[48045]=20,[373065]=115,[200209]=64,[390980]=170,[373003]=110,[265202]=83,[228260]=72,[132157]=42,[193134]=46,[390919]=164,[108920]=30,[263165]=80,[108968]=33,[314867]=86,[372370]=101,[391368]=194,[238558]=78,[47536]=17,[204197]=65,[390668]=147,[215768]=71,[596]=3,[196707]=53,[372309]=99,[288733]=85,[373202]=118,[390670]=148,[213634]=69,[155271]=43,[200183]=62,[377349]=138,[321377]=88,[372760]=104,[81749]=28,[335467]=90,[32375]=10,[32379]=11,[391161]=182,[64901]=25,[392988]=199,[199484]=58,[373273]=122,[73510]=27,[390996]=173,[392507]=198,[391124]=179,[9484]=6,[238100]=75,[373466]=131,[390615]=142,[196489]=51,[341273]=93,[373212]=119,[391381]=195,[391387]=196,[341997]=96,[391296]=192,[391242]=189,[391235]=188,[391233]=187,[391209]=185,[391208]=184,[162448]=44,[391186]=183,[393870]=200,[391154]=181,[390770]=159,[391112]=178,[122121]=39,[373280]=123,[390684]=150,[391109]=177,[375767]=133,[205385]=68,[372835]=105,[391090]=175,[373457]=130,[390622]=144,[390686]=152,[10060]=7,[605]=4,[390994]=172,[390992]=171,[390977]=169,[390967]=167,[373427]=126,[390705]=156,[390786]=161,[373221]=120,[108942]=31,[390689]=153,[34433]=14,[200128]=60,[390881]=163,[390781]=160,[197419]=56,[47515]=16,[391137]=180,[375901]=135,[390767]=158,[372969]=106,[204883]=66,[390947]=165,[390693]=155,[390691]=154,[390685]=151,[110744]=35,[390676]=149,[33076]=12,[373035]=111,[390667]=146,[377065]=137,[372972]=107,[390620]=143,[214621]=70,[15487]=9,[377422]=140,[390632]=145,[375888]=134,[373481]=132,[391079]=174,[373456]=129,[238063]=74,[373450]=128,[246287]=79,[391399]=197,[377438]=141,[64129]=23,[196985]=54,[263716]=82,[390954]=166,[194509]=49,[2050]=5,[528]=2,[238135]=76,[373223]=121,[372307]=98,[108945]=32,[280749]=84,[390765]=157,[391339]=193,[196704]=52,[88625]=29,[121536]=38,[196437]=50,[373042]=112,[33206]=13,[129250]=41,[34861]=15,[47585]=18,[200199]=63,[120644]=37,[390832]=162,[193155]=47,[64044]=22,[73325]=26,[322115]=89,[341167]=91,[341491]=95,[120517]=36,[205364]=67,[123040]=40,[47788]=19,[197045]=55,[15286]=8, },
	[790] = { [383185]=114,[152261]=33,[378405]=98,[383314]=123,[215661]=62,[152262]=34,[378279]=96,[216331]=63,[231663]=69,[267610]=77,[31935]=18,[386568]=157,[393071]=196,[383254]=116,[385422]=147,[6940]=6,[384914]=141,[105809]=27,[1044]=5,[378285]=97,[96231]=26,[157047]=36,[85043]=22,[385427]=149,[387786]=169,[231667]=70,[383388]=131,[10326]=7,[200430]=45,[183218]=37,[383263]=117,[377016]=92,[383328]=124,[387791]=170,[214202]=61,[209389]=58,[280373]=79,[386901]=160,[230332]=66,[393022]=192,[383396]=132,[20473]=9,[231895]=72,[378425]=99,[383334]=125,[383271]=118,[231832]=71,[387479]=166,[53385]=19,[393027]=194,[85222]=23,[383274]=119,[385633]=153,[387801]=171,[387993]=177,[114165]=30,[383276]=120,[385125]=142,[325966]=82,[31821]=11,[231644]=68,[326732]=83,[387805]=172,[379008]=104,[200025]=44,[326734]=84,[387998]=178,[392907]=185,[184662]=41,[204074]=55,[387808]=173,[385450]=150,[633]=3,[148039]=32,[86659]=25,[392911]=186,[384815]=137,[200474]=46,[393114]=197,[393030]=195,[255937]=75,[393024]=193,[392961]=191,[384052]=135,[392951]=190,[204077]=56,[387814]=174,[392938]=189,[379017]=105,[205191]=57,[392914]=187,[387879]=175,[392902]=184,[388007]=180,[375576]=90,[384820]=138,[210294]=59,[377043]=93,[384909]=140,[388005]=179,[388018]=181,[389539]=182,[383228]=115,[183998]=39,[82326]=21,[384027]=134,[387781]=168,[327193]=85,[379022]=107,[377128]=95,[387196]=165,[387174]=164,[53595]=20,[387170]=163,[386967]=161,[382275]=111,[31850]=12,[203316]=49,[386738]=159,[386653]=158,[24275]=10,[213644]=60,[1022]=4,[204018]=50,[385726]=155,[385639]=154,[385515]=152,[385464]=151,[183778]=38,[184575]=40,[385425]=148,[204019]=51,[269569]=78,[379043]=108,[385349]=144,[383300]=121,[385129]=143,[377053]=94,[391142]=183,[382536]=113,[200482]=47,[20066]=8,[392928]=188,[378457]=100,[383876]=133,[383342]=126,[384162]=136,[387893]=176,[384897]=139,[156910]=35,[200652]=48,[383304]=122,[223306]=64,[498]=2,[382430]=112,[387640]=167,[267344]=76,[385728]=156,[383350]=128,[383344]=127,[223817]=65,[234299]=73,[85804]=24,[343527]=86,[376996]=91,[378845]=102,[315924]=80,[231642]=67,[204054]=54,[114154]=28,[196926]=43,[378974]=103,[379391]=109,[204023]=52,[343721]=87,[190784]=42,[385414]=145,[248033]=74,[379021]=106,[31884]=17,[378762]=101,[114158]=29,[380188]=110,[321136]=81,[385416]=146,[115750]=31, },
	[786] = { [381655]=128,[375982]=102,[382039]=156,[17364]=13,[5394]=5,[381785]=140,[210689]=79,[198067]=67,[333974]=93,[60188]=28,[273221]=87,[200076]=73,[386443]=201,[381726]=135,[77472]=33,[117013]=46,[188443]=53,[382046]=161,[192077]=59,[378094]=108,[305483]=89,[384087]=188,[382685]=173,[108280]=39,[381666]=129,[117014]=48,[198103]=68,[334046]=95,[333919]=92,[114050]=43,[108281]=40,[33757]=15,[198838]=70,[51886]=23,[383010]=179,[382309]=170,[382947]=177,[114051]=44,[187874]=51,[30884]=14,[383012]=181,[197214]=65,[334308]=97,[384352]=191,[201900]=74,[381930]=144,[381867]=143,[114052]=45,[382888]=176,[381932]=145,[383016]=183,[382315]=171,[381678]=131,[383017]=184,[381743]=136,[383019]=185,[60103]=27,[381936]=146,[8042]=6,[390288]=203,[51505]=18,[1064]=3,[378241]=113,[382194]=164,[187880]=52,[384363]=194,[157153]=49,[52127]=24,[73685]=31,[157154]=50,[334195]=96,[192249]=62,[192058]=57,[393905]=206,[392352]=205,[382020]=149,[51490]=17,[381689]=132,[196840]=63,[51514]=19,[198434]=69,[210853]=81,[383222]=186,[384450]=199,[381787]=141,[386474]=202,[384411]=196,[260878]=82,[108271]=38,[108287]=42,[384405]=195,[378443]=122,[384359]=193,[384355]=192,[384149]=190,[8512]=8,[384143]=189,[16166]=10,[192088]=60,[383013]=182,[61882]=30,[383011]=180,[383009]=178,[382886]=175,[378255]=114,[974]=2,[378075]=104,[191634]=55,[382201]=168,[192222]=61,[382197]=167,[378193]=109,[16196]=12,[382191]=163,[390370]=204,[381764]=137,[382045]=160,[207778]=78,[382042]=159,[342240]=98,[382040]=157,[382033]=155,[8143]=7,[382021]=150,[57994]=25,[384444]=197,[108285]=41,[77756]=35,[382086]=162,[319930]=90,[382019]=148,[381946]=147,[381819]=142,[265046]=86,[382215]=169,[378077]=105,[378773]=123,[384447]=198,[197995]=66,[192063]=58,[16191]=11,[262303]=83,[381707]=133,[207399]=76,[378776]=124,[210714]=80,[381708]=134,[382027]=151,[378266]=115,[51564]=21,[262624]=84,[383303]=187,[378271]=120,[191861]=56,[51485]=16,[382029]=152,[378268]=116,[381647]=126,[58875]=26,[382030]=153,[378779]=125,[207401]=77,[382732]=174,[381776]=138,[378270]=119,[378079]=106,[98008]=37,[382032]=154,[79206]=36,[381650]=127,[381674]=130,[200071]=71,[344357]=99,[378081]=107,[280614]=88,[196884]=64,[385923]=200,[51533]=20,[378310]=121,[200072]=72,[262647]=85,[377933]=103,[382482]=172,[378211]=111,[73920]=32,[334033]=94,[61295]=29,[381782]=139,[370]=1,[204268]=75, },
	[793] = { [203962]=101,[390772]=170,[158477]=67,[197524]=76,[391347]=177,[382550]=155,[158478]=68,[33891]=25,[371905]=139,[203964]=102,[155578]=62,[370695]=138,[132469]=58,[131768]=56,[203965]=103,[29166]=21,[202021]=88,[383192]=159,[155675]=64,[278515]=122,[394094]=238,[155835]=65,[102558]=45,[16974]=16,[102351]=41,[383195]=160,[378988]=154,[391037]=173,[202342]=91,[382559]=157,[391548]=182,[377842]=151,[197625]=79,[79577]=36,[102543]=44,[197721]=84,[384665]=163,[392124]=202,[197626]=80,[231063]=114,[203651]=99,[202918]=98,[231032]=111,[231064]=115,[192081]=71,[194153]=72,[202345]=92,[377210]=146,[345208]=136,[197628]=83,[102401]=43,[391045]=174,[319454]=129,[106832]=47,[391174]=176,[202028]=89,[202347]=93,[5217]=12,[372943]=144,[99]=1,[16931]=15,[108299]=52,[370586]=137,[372945]=145,[203974]=104,[328767]=134,[207385]=108,[394121]=240,[238049]=117,[200851]=86,[394115]=239,[391881]=188,[327993]=132,[191034]=70,[202031]=90,[274837]=120,[391888]=190,[394058]=235,[394048]=234,[394046]=233,[274902]=121,[394013]=232,[279620]=123,[106898]=49,[393991]=231,[194223]=73,[377796]=147,[393960]=230,[393958]=229,[113043]=53,[327541]=131,[393940]=226,[50334]=30,[200854]=87,[197061]=74,[393868]=225,[231040]=112,[393771]=224,[213764]=110,[205636]=106,[135288]=59,[207383]=107,[393618]=222,[108238]=51,[78674]=34,[393611]=221,[377801]=148,[392256]=208,[393414]=219,[326228]=130,[48438]=26,[300346]=126,[88747]=38,[6807]=13,[210706]=109,[393371]=218,[80313]=37,[102342]=40,[384668]=165,[392378]=215,[78675]=35,[202770]=97,[392356]=214,[392325]=213,[392315]=212,[383352]=162,[2908]=10,[392302]=211,[22570]=18,[124974]=55,[1822]=5,[145205]=61,[93402]=39,[384721]=166,[102359]=42,[393427]=220,[391709]=184,[394065]=236,[48484]=27,[383191]=158,[1079]=4,[392160]=203,[392116]=201,[378986]=153,[2782]=9,[377835]=150,[274281]=119,[392410]=216,[202359]=94,[391951]=193,[203953]=100,[391947]=191,[392220]=206,[391875]=187,[391872]=186,[202430]=96,[392221]=207,[328025]=133,[391700]=183,[106839]=48,[391528]=181,[383197]=161,[390902]=172,[390864]=171,[377847]=152,[386318]=168,[106951]=50,[114107]=54,[391969]=197,[392288]=209,[33873]=24,[385786]=167,[50464]=31,[384667]=164,[391078]=175,[392162]=204,[231050]=113,[382552]=156,[392099]=200,[390378]=169,[391972]=198,[377811]=149,[372618]=143,[372567]=142,[252216]=118,[204053]=105,[288826]=125,[372119]=141,[371999]=140,[301768]=127,[24858]=20,[33786]=23,[393760]=223,[102793]=46,[236068]=116,[392167]=205,[22842]=19,[391785]=185,[740]=2,[343647]=135,[5211]=11,[394081]=237,[18562]=17,[393954]=227,[391978]=199,[319439]=128,[200390]=85,[145108]=60,[392999]=217,[285381]=124,[61336]=33,[393956]=228,[159286]=69,[16864]=14,[132158]=57,[774]=3,[2637]=6,[197073]=75,[202425]=95,[158476]=66,[33763]=22,[392301]=210,[155580]=63, },
}

local treeNodeEntryIDs = {
	[850] = { [112182]=386196,[112198]=107570,[112214]=64382,[112230]=275336,[112246]=382948,[112262]=383468,[112278]=392536,[112294]=388933,[112310]=383154,[112326]=383103,[112119]=385512,[112135]=383287,[112151]=12975,[112167]=871,[112183]=202168,[112199]=382940,[112215]=384110,[112231]=394307,[112247]=376079,[112263]=208154,[112279]=206315,[112295]=315720,[112311]=383703,[112327]=384042,[112120]=260708,[112136]=772,[112152]=6572,[112168]=281001,[112184]=386164,[112200]=382940,[112216]=392792,[112232]=107574,[112248]=392777,[112264]=184364,[112280]=388004,[112296]=383297,[112312]=390563,[112121]=388807,[112137]=262150,[112153]=236279,[112169]=386027,[112185]=262231,[112201]=382956,[112217]=382549,[112233]=384124,[112249]=103827,[112265]=85288,[112281]=1719,[112297]=388049,[112313]=386628,[112122]=12294,[112138]=383219,[112154]=384361,[112170]=202743,[112186]=3411,[112202]=384090,[112218]=382461,[112234]=391270,[112250]=275338,[112266]=383852,[112282]=383922,[112298]=12950,[112314]=227847,[112123]=7384,[112139]=262161,[112155]=394311,[112171]=386011,[112187]=386208,[112203]=203201,[112219]=202163,[112235]=382939,[112251]=382954,[112267]=383848,[112283]=389603,[112299]=392931,[112315]=383338,[112108]=384124,[112124]=202316,[112140]=383442,[112156]=394062,[112172]=386328,[112188]=97462,[112204]=384277,[112220]=383762,[112236]=390642,[112252]=5246,[112268]=215568,[112284]=396749,[112300]=280721,[112316]=385573,[112109]=394855,[112125]=316405,[112141]=385008,[112157]=384041,[112173]=385952,[112189]=29838,[112205]=6343,[112221]=391572,[112237]=392790,[112253]=23920,[112269]=81099,[112285]=152278,[112301]=316402,[112317]=389306,[112110]=392966,[112126]=29725,[112142]=248621,[112158]=202560,[112174]=384067,[112190]=382310,[112206]=382258,[112222]=384969,[112238]=382260,[112254]=346002,[112270]=385703,[112286]=383459,[112302]=393965,[112318]=386634,[112111]=29725,[112127]=383103,[112143]=152278,[112159]=1160,[112175]=202603,[112191]=383115,[112207]=316733,[112223]=384318,[112239]=18499,[112255]=392936,[112271]=383959,[112287]=394329,[112303]=382953,[112319]=383292,[112112]=386164,[112128]=118038,[112144]=167105,[112160]=386034,[112176]=203177,[112192]=384404,[112208]=6544,[112224]=382946,[112240]=382900,[114296]=396719,[112272]=383486,[112288]=391683,[112304]=228920,[112320]=383341,[112113]=394312,[112129]=384361,[112145]=281001,[112161]=386071,[112177]=385843,[112193]=383115,[112209]=382764,[112225]=391271,[112241]=275339,[112257]=390563,[112273]=383885,[112289]=385059,[112305]=384063,[112321]=385704,[112114]=390713,[112130]=316440,[112146]=383430,[112162]=385840,[112178]=390725,[112194]=384404,[112210]=12323,[112226]=390135,[112242]=46968,[112258]=382953,[112274]=393950,[112290]=383916,[112306]=202095,[112322]=393967,[112115]=280001,[112131]=385571,[112147]=845,[112163]=1161,[112179]=382896,[112195]=383115,[112211]=384100,[112227]=390123,[112243]=391997,[112259]=383854,[112275]=335077,[112291]=388903,[112307]=386394,[112323]=275334,[112116]=386477,[112132]=386357,[112148]=383293,[112164]=384072,[112180]=386285,[112196]=384404,[112212]=382764,[112228]=390140,[112244]=390675,[112260]=280392,[112276]=383877,[112292]=383295,[112308]=386630,[112324]=385888,[114293]=383082,[112117]=383317,[112133]=260643,[112149]=190456,[112165]=397103,[112181]=382895,[112197]=390354,[112213]=215571,[112229]=390138,[112245]=382767,[112261]=23881,[112277]=184367,[112293]=383605,[112309]=389308,[112325]=384036,[114295]=396719,[114294]=390674,[112118]=334779,[112134]=184783,[112150]=386030,[112166]=152278,[112256]=228920, },
	[852] = { [112517]=121411,[112533]=200733,[112549]=196938,[112565]=385408,[112581]=14062,[112597]=58423,[112613]=382509,[112629]=319949,[112645]=381619,[112661]=381669,[112677]=385627,[112518]=394983,[112534]=381877,[112550]=343142,[112566]=381894,[112582]=381621,[112598]=319951,[112614]=121471,[112630]=5938,[112646]=378803,[112662]=360194,[112678]=381798,[112519]=381624,[112535]=381988,[112551]=51690,[112567]=394321,[112583]=36554,[112599]=277953,[112615]=108209,[112631]=1776,[112647]=131511,[112663]=381800,[112679]=328085,[112504]=381630,[112520]=79134,[112536]=354897,[112552]=386823,[112568]=14161,[112584]=379005,[112600]=319175,[112616]=382503,[112632]=1966,[112648]=381623,[112664]=381652,[112505]=381664,[112521]=378436,[112537]=381839,[112553]=381846,[112569]=256188,[112585]=31224,[112601]=382017,[112617]=36554,[112633]=231719,[112649]=14190,[112665]=381634,[112506]=385424,[112522]=319066,[112538]=381989,[112554]=381985,[112570]=195457,[112586]=257505,[112602]=385722,[112618]=382528,[112634]=193546,[112650]=280716,[112666]=152152,[112507]=385408,[112523]=394332,[112539]=381990,[112555]=382746,[112571]=279876,[112587]=200758,[112603]=280719,[112619]=382524,[112635]=378427,[112651]=14983,[112667]=381802,[112508]=255989,[112524]=381622,[112540]=395422,[112556]=272026,[112572]=2094,[112588]=382507,[112604]=277925,[112620]=245687,[112636]=231691,[112652]=381542,[112668]=381799,[112509]=381640,[112525]=385616,[112541]=381982,[112557]=381828,[112573]=6770,[112589]=394309,[112605]=382506,[112621]=382514,[112637]=31230,[112653]=381543,[112669]=385478,[112510]=381626,[112526]=378996,[112542]=256170,[112558]=235484,[112574]=57934,[112590]=382513,[112606]=384631,[112622]=382515,[112638]=79008,[112654]=378813,[112670]=381673,[112511]=392384,[112527]=381845,[112543]=315508,[112559]=381878,[112575]=378807,[112591]=382508,[112607]=382504,[112623]=393972,[112639]=382245,[112655]=381637,[112671]=196861,[112512]=193640,[112528]=381885,[112544]=79096,[112560]=196922,[112576]=108208,[112592]=385408,[112608]=382525,[112624]=196976,[112640]=382238,[112656]=5761,[112672]=200806,[112513]=319032,[112529]=256165,[112545]=13750,[112561]=13877,[112577]=185313,[112593]=382015,[112609]=382517,[112625]=382505,[112641]=137619,[112657]=5277,[112673]=381632,[112514]=51667,[112530]=271877,[112546]=381822,[112562]=383281,[112578]=91023,[112594]=382523,[112610]=394320,[112626]=394023,[112642]=193531,[112658]=381801,[112674]=381627,[112515]=381629,[112531]=108216,[112547]=344363,[112563]=382742,[112579]=393970,[112595]=382518,[112611]=382511,[112627]=343160,[112643]=193539,[112659]=381797,[112675]=36554,[112516]=381631,[112532]=61329,[112548]=35551,[112564]=196937,[112580]=381620,[112596]=382512,[112612]=185314,[112628]=193537,[112644]=196924,[112660]=255544,[112676]=2823, },
	[854] = { [112947]=390142,[112820]="nil",[112836]=389811,[112852]=320770,[112868]=389705,[112884]=207697,[112900]=393827,[112916]=389697,[112932]=391275,[112948]=343311,[112821]=196555,[112837]=370965,[112853]=198793,[112869]=320341,[112885]=263642,[112901]=389708,[112917]=391409,[112933]=389977,[112949]=203550,[112822]=205411,[112838]=388111,[112854]=204596,[112870]=263648,[112886]=389997,[112902]=390808,[112918]=389695,[112934]=390154,[112950]=388108,[112823]=206478,[112839]=395446,[112855]=389799,[112871]=343014,[112887]=207548,[112903]=390213,[112919]=389783,[112935]=211881,[112951]=320413,[112824]=258881,[112840]=320635,[112856]=207666,[112872]=389220,[112888]=227174,[112904]=202137,[112920]=389781,[112936]=389978,[112952]=343017,[112825]=390158,[112841]=320386,[112857]=388110,[112873]=207739,[112889]=389711,[112905]=391178,[112921]=196718,[112937]=393029,[112953]=343206,[112826]=391189,[112842]=232893,[112858]=320418,[112874]=390163,[112890]=391165,[112906]=321028,[112922]=235893,[112938]=388109,[112954]=388116,[112827]=388107,[112843]=207347,[112859]=207684,[112875]=391429,[112891]=343207,[112907]=389958,[112923]=213410,[112939]=198013,[112955]=258887,[112828]=388114,[112844]=320421,[112860]=389849,[112876]=389732,[112892]=207387,[112908]=212084,[112924]=320331,[112940]=203555,[112956]=258860,[112829]=388106,[112845]=393822,[112861]=213010,[112877]=336639,[112893]=268175,[112909]=206477,[112925]=320313,[112941]=258876,[112957]=388118,[112830]=320415,[112846]=389696,[112862]=389694,[112878]=389718,[112894]=247454,[112910]=320412,[112926]=278326,[112942]=347461,[112958]=389687,[112831]=388112,[112847]=204909,[112863]=389824,[112879]=389715,[112895]=209258,[112911]=179057,[112927]=217832,[112943]=206476,[112959]=388113,[112832]=320374,[112848]=183782,[112864]=204021,[112880]=326853,[112896]=389985,[112912]=389763,[112928]=320416,[112944]=389688,[112833]=328725,[112849]=320361,[112865]=389729,[112881]=389721,[112897]=389976,[112913]=390152,[112929]=389693,[112945]=258925,[112834]=206416,[112850]=389846,[112866]=389724,[112882]=389720,[112898]=207407,[112914]=391397,[112930]=390163,[112946]=342817,[112835]=389819,[112851]=320654,[112867]=202138,[112883]=320387,[112899]=218612,[112915]=209281,[112931]=391429, },
	[781] = { [101472]=396166,[101488]=388193,[101504]=116705,[101520]=389578,[101536]=389577,[101552]=386276,[101361]=210802,[101377]=388615,[101393]=388701,[101409]=387765,[101425]=388854,[101441]=383785,[101457]=387256,[101473]=123904,[101489]=388849,[101505]=344359,[101521]=394123,[101537]=393400,[101362]=196725,[101378]=115310,[101394]=115151,[101410]=116680,[101426]=116645,[101442]=389942,[101458]=122281,[101474]=152175,[101490]=392985,[101506]=115078,[101522]=122278,[101538]=397251,[101363]=197900,[101379]=197908,[101395]=281231,[101411]=196736,[101427]=280197,[101443]=387230,[101459]=387625,[101475]=323999,[101491]=392983,[101507]=116841,[101523]=388809,[101539]=387184,[101364]=388564,[101380]=197915,[101396]=325197,[101412]=387046,[101428]=152173,[101444]=387638,[101460]=325177,[101476]=195300,[101492]=196740,[101508]=107428,[101524]=388674,[101540]=322740,[101365]=388604,[101381]=388212,[101397]=322118,[101413]=388681,[101429]=137639,[101445]=393516,[101461]=383695,[101477]=388661,[101493]=392958,[101509]=115175,[101525]=389574,[101541]=383707,[101366]=388517,[101382]=388031,[101398]=388551,[101414]=264348,[101430]=391370,[101446]=386937,[101462]=322510,[101478]=392993,[101494]=392970,[101510]=231602,[101526]=392910,[101542]=325153,[102626]=218164,[101367]=393460,[101383]=388779,[101399]=388593,[101415]=392994,[101431]=391330,[101447]=383714,[101463]=322507,[101479]=392991,[101495]=116095,[101511]=388664,[101527]=123986,[101543]=387219,[102627]=388874,[101368]=124081,[101384]=388038,[101400]=274963,[101416]=218164,[101432]=101545,[101448]=325093,[101464]=115181,[101480]=392989,[101496]=115203,[101512]=101643,[101528]=115098,[101544]=132578,[101369]=388548,[101385]=388847,[101401]=197895,[101417]=392979,[101433]=388856,[101449]=280515,[101465]=386965,[101481]=392986,[101497]=388813,[101513]=388812,[101529]=388811,[101545]=383700,[101370]=124682,[101386]=337209,[101402]=388682,[101418]=393098,[101434]=220357,[101450]=115399,[101466]=383994,[101482]=394923,[101498]=388814,[101514]=328670,[101530]=392900,[101546]=393357,[101371]=388740,[101387]=388511,[101403]=116645,[101419]=388846,[101435]=392982,[101451]=121253,[101467]=383697,[101483]=388848,[101499]=387276,[101515]=122783,[101531]=328669,[101547]=115176,[101356]=274909,[101372]=388491,[101388]=343655,[101404]=386941,[101420]=122470,[101436]=116847,[101452]=124502,[101468]=383698,[101484]=386941,[101500]=389575,[101516]=116844,[101532]=115313,[101548]=196730,[101357]=387991,[101373]=388661,[101389]=388218,[101405]=386949,[101421]=391383,[101437]=325201,[101453]=119582,[101469]=196737,[101485]=386276,[101501]=322113,[101517]=157411,[101533]=389579,[101549]=116847,[101358]=274586,[101374]=122281,[101390]=116849,[101406]=191837,[101422]=115396,[101438]=195243,[101454]=115069,[101470]=322960,[101486]=394093,[101502]=115008,[101518]=196607,[101534]=394110,[101550]=386941,[101359]=388193,[101375]=388509,[101391]=388020,[101407]=388047,[101423]=113656,[101439]=387035,[101455]=322120,[101471]=343743,[101487]=391412,[101503]=115173,[101519]=388686,[101535]=115315,[101551]=386949,[101360]=198898,[101376]=388477,[101392]=386276,[101408]=388023,[101424]=121817,[101440]=324312,[101456]=388505, },
	[720] = { [91527]=387485,[91543]=104316,[91559]=386922,[91575]=196103,[91591]=116858,[91432]=171975,[91448]=386256,[91464]=386613,[91480]=387400,[91496]=205148,[91512]=387600,[91528]=387399,[91544]=264178,[91560]=196226,[91576]=108503,[91592]=5740,[91433]=108415,[91449]=386646,[91465]=389609,[91481]=387173,[91497]=387522,[91513]=387578,[91529]=387488,[91545]=387322,[91561]=196102,[91577]=386976,[91434]=386689,[91450]=384069,[91466]=111771,[91482]=387252,[91498]=387509,[91514]=387526,[91530]=387396,[91546]=386185,[91562]=199471,[91578]=386997,[91419]=389992,[91435]=386620,[91451]=264874,[91467]=386659,[91483]=387156,[91499]=196408,[91515]=267217,[91531]=111898,[91547]=267216,[91563]=387073,[91579]=387016,[91420]=389775,[91436]=386858,[91452]=30283,[91468]=317138,[91484]=108503,[91500]=387384,[91516]=387445,[91532]=387338,[91548]=603,[91564]=201424,[91580]=264000,[91421]=389359,[91437]=386619,[91453]=386651,[91469]=385899,[91485]=387259,[91501]=196412,[91517]=387391,[91533]=267170,[91549]=387483,[91565]=32388,[91581]=388827,[91422]=389623,[91438]=288843,[91454]=710,[91470]=387475,[91486]=388832,[91502]=1122,[91518]=387432,[91534]=386200,[91550]=265187,[91566]=198590,[91582]=17877,[91423]=387976,[91439]=333889,[91455]=386648,[91471]=387084,[91487]=152108,[91503]=389764,[91519]=387349,[91535]=205145,[91551]=387075,[91567]=334319,[91583]=387108,[91424]=389590,[91440]=386113,[91456]=386864,[91472]=266086,[91488]=270545,[91504]=387273,[91520]=196277,[91536]=386194,[91552]=48181,[91568]=108558,[91584]=387103,[91425]=389367,[91441]=268358,[91457]=6789,[91473]=387355,[91489]=387095,[91505]=387084,[91521]=264130,[91537]=264057,[91553]=387065,[91569]=316099,[91585]=387166,[91426]=389576,[91442]=328774,[91458]=5484,[91474]=387569,[91490]=387093,[91506]=387301,[91522]=387541,[91538]=264119,[91554]=205180,[91570]=324536,[91586]=196447,[91427]=386344,[91443]=387972,[91459]=386110,[91475]=387165,[91491]=387176,[91507]=387250,[91523]=386833,[91539]=264078,[91555]=386986,[91571]=27243,[91587]=231793,[91428]=389630,[91444]=108416,[91460]=111400,[91476]=387159,[91492]=6353,[91508]=387084,[91524]=387549,[91540]=267171,[91556]=278350,[91572]=317031,[91588]=205184,[91429]=389761,[91445]=386686,[91461]=386124,[91477]=387153,[91493]=80240,[91509]=390173,[91525]=387602,[91541]=267211,[91557]=205179,[91573]=386759,[91589]=196406,[91430]=386617,[91446]=386664,[91462]=386105,[91478]=387279,[91494]=387506,[91510]=334585,[91526]=387494,[91542]=386174,[91558]=386951,[91574]=63106,[91590]=17962,[91431]=215941,[91447]=385881,[91463]=219272,[91479]=387275,[91495]=266134,[91511]=267214, },
	[774] = { [100516]=389660,[100532]=385737,[100548]=294029,[100564]=260248,[100580]=257621,[100596]=193533,[100612]=378739,[100628]=375891,[100644]=199921,[100660]=378442,[100676]=199532,[100692]=393344,[100517]=389019,[100533]=385718,[100549]=378916,[100565]=263186,[100581]=204089,[100597]=321460,[100613]=269737,[100629]=201430,[100645]=378010,[100661]=267116,[100677]=389654,[100518]=388057,[100534]=384791,[100550]=378934,[100566]=259387,[100582]=260240,[100598]=260367,[100614]=273887,[100630]=2643,[100646]=266921,[100662]=378209,[100678]=378244,[100519]=388056,[100535]=384790,[100551]=186270,[100567]=265895,[100583]=378771,[100599]=378905,[100615]=271788,[100631]=378002,[100647]=199483,[100663]=193455,[100679]=257944,[100520]=388045,[100536]=384799,[100552]=212436,[100568]=259495,[100584]=260228,[100600]=321293,[100616]=5116,[100632]=343244,[100648]=34026,[100664]=193530,[100680]=193532,[100521]=388042,[100537]=320976,[100553]=187708,[100569]=260331,[100585]=257044,[100601]=378767,[100617]=19801,[100633]=321468,[100649]=343242,[100665]=378210,[100681]=185789,[100522]=388039,[100538]=53351,[100554]=260285,[100570]=360952,[100586]=378888,[100602]=391559,[100618]=162488,[100634]=109215,[100650]=109248,[100666]=393933,[100682]=359844,[100523]=264735,[100539]=53351,[100555]=321290,[100571]=360966,[100587]=288613,[100603]=260393,[100619]=385539,[100635]=378004,[100651]=213691,[100667]=378743,[100683]=217200,[100524]=231548,[100540]=147362,[100556]=378951,[100572]=264332,[100588]=378769,[100604]=321018,[100620]=236776,[100636]=343247,[100652]=392060,[100668]=378207,[100525]=321530,[100541]=34026,[100557]=203415,[100573]=378940,[100589]=194595,[100605]=190852,[100621]=19577,[100637]=34477,[100653]=378740,[100669]=19574,[100510]=389880,[100526]=120360,[100542]=259489,[100558]=378953,[100574]=378962,[100590]=392060,[100606]=378765,[100622]=260241,[100638]=270581,[100654]=378745,[100670]=115939,[100511]=389865,[100527]=385810,[100543]=187707,[100559]=378955,[100575]=271014,[100591]=321287,[100607]=389449,[100623]=378014,[100639]=378007,[100655]=378750,[100671]=56315,[100512]=389866,[100528]=385739,[100544]=257620,[100560]=378961,[100576]=155228,[100592]=378907,[100608]=386878,[100624]=147362,[100640]=1513,[100656]=199530,[100672]=321014,[100513]=389882,[100529]=385695,[100545]=269751,[100561]=378950,[100577]=186387,[100593]=378766,[100609]=260404,[100625]=260309,[100641]=187698,[100657]=131894,[100673]=120679,[100514]=390231,[100530]=268501,[100546]=190925,[100562]=186289,[100578]=19434,[100594]=378880,[100610]=378913,[100626]=212431,[100658]=191384,[100674]=199528,[100515]=386870,[100531]=385709,[100547]=378948,[100563]=378937,[100579]=260402,[100595]=260243,[100611]=378910,[100627]=342049,[100643]=343248,[100659]=378205,[100675]=392053, },
	[701] = { [87702]=363916,[87591]=375796,[87607]=371270,[87623]=376150,[87639]=375777,[87655]=370781,[87671]=370962,[87687]=374346,[87703]=370897,[87592]=377086,[87608]=376237,[87624]=376138,[87640]=369375,[87656]=375783,[87672]=369089,[87688]=369909,[87704]=375554,[87593]=377082,[87609]=376236,[87625]=367226,[87641]=370452,[87657]=375801,[87673]=370837,[87689]=369939,[87705]=375556,[87594]=370960,[87610]=385696,[87626]=362874,[87642]=386342,[87658]=370783,[87674]=365937,[87690]=368432,[87706]=375517,[87595]=377100,[87611]=373861,[87627]=355936,[87643]=386336,[87659]=368847,[87675]=371032,[87691]=375507,[87707]=387761,[87596]=375783,[87612]=363534,[87628]=364343,[87644]=370839,[87660]=386283,[87676]=374968,[87692]=351338,[87708]=358385,[87597]=359816,[87613]=357170,[87629]=366155,[87645]=375757,[87661]=375725,[87677]=387787,[87693]=376164,[87709]=369913,[87598]=369908,[87614]=378196,[87630]=369297,[87646]=375618,[87662]=376888,[87678]=375561,[87694]=375510,[87710]=375520,[87583]="nil",[87599]=371257,[87615]=372527,[87631]=375722,[87647]=359073,[87663]=386272,[87679]=374348,[87695]=372048,[87711]=371806,[87584]=375528,[87600]=381921,[87616]=371426,[87632]=359793,[87648]=371034,[87664]=375797,[87680]=375577,[87696]=369459,[87712]=376166,[87585]=375443,[87601]=376204,[87617]=376179,[87633]=370062,[87649]=375722,[87665]=375087,[87681]=375574,[87697]=375544,[87713]=370553,[87586]=368838,[87602]=376207,[87618]=373834,[87634]=373270,[87650]=371038,[87666]=386405,[87682]=374227,[87698]=369990,[87714]=372469,[87587]=360806,[87603]=370537,[87619]=381922,[87635]=377099,[87651]=370455,[87667]=371016,[87683]=370888,[87699]=376930,[87715]=360995,[87588]=370886,[87604]=368412,[87620]=376210,[87636]=370819,[87652]=370845,[87668]=375721,[87684]=387341,[87700]=374251,[87716]=365585,[87589]=375542,[87605]=376240,[87621]=376239,[87637]=369846,[87653]=370821,[87669]=357211,[87685]=370665,[87701]=375406,[87590]=369908,[87606]=372233,[87622]=371832,[87638]=370867,[87654]=386348,[87670]=376872,[87686]=365933, },
	[658] = { [80307]=5143,[80148]=389713,[80164]=383121,[80180]=235450,[80196]=384858,[80212]=270233,[80228]=12982,[80244]=190447,[80260]=44457,[80276]=383499,[80292]=384060,[80308]=153626,[80149]=382800,[80165]=382292,[80181]=45438,[80197]=384612,[80229]=378919,[80245]=257537,[80261]=383391,[80277]=269650,[80293]=321420,[80309]=383661,[80150]=386539,[80166]=343183,[80182]=382424,[80198]=281482,[80214]=382103,[80230]=205027,[80246]=205030,[80262]=384174,[80278]=343222,[80294]=236628,[80310]=384651,[80151]=383243,[80167]=391102,[80183]=55342,[80199]=114923,[80215]=378901,[80231]=379993,[80247]=378198,[80263]=384033,[80279]=383604,[80295]=383782,[80152]=110959,[80168]=382481,[80184]=382820,[80200]=205028,[80216]=382144,[80248]=378947,[80264]=205020,[80280]=269644,[80296]=236457,[80153]=382268,[80169]=382289,[80185]=382569,[80201]=231564,[80217]=378433,[80233]=236662,[80249]=153595,[80265]=155148,[80281]=2948,[80297]=321752,[80154]=31589,[80170]=382293,[80186]=157997,[80202]=235711,[80218]=278309,[80234]=381706,[80250]=378448,[80266]=383476,[80282]=108853,[80298]=79684,[80139]=205026,[80155]=382490,[80171]=116011,[80187]=382493,[80203]=384861,[80219]=155149,[80235]=12472,[80251]=382110,[80267]=203275,[80283]=11366,[80299]=365350,[80140]=30449,[80156]=382826,[80172]=1463,[80188]=235224,[80204]=321387,[80220]=199786,[80236]=378406,[80252]=383860,[80268]=383659,[80284]=387044,[80300]=321526,[80141]=382440,[80157]=386828,[80173]=383092,[80189]=387807,[80205]=383980,[80221]=381244,[80237]=31687,[80253]=383810,[80269]=383967,[80285]=257541,[80301]=321745,[80142]=205036,[80158]=382270,[80174]=342245,[80190]=321739,[80206]=264354,[80222]=378749,[80238]=205024,[80254]=205023,[80270]=383489,[80286]=157642,[80302]=321507,[80143]=386763,[80159]=342249,[80175]=475,[80191]=342231,[80207]=205022,[80223]=380154,[80239]=235219,[80255]=383665,[80271]=383634,[80287]=117216,[80303]=384581,[80144]=113724,[80160]=157981,[80176]=11426,[80192]=759,[80208]=205025,[80224]=56377,[80240]=190356,[80256]=205029,[80272]=383669,[80288]=235870,[80304]=376103,[80145]=389627,[80161]=382297,[80177]=66,[80193]=384276,[80209]=12051,[80225]=379049,[80241]=30455,[80257]=343230,[80273]=383886,[80289]=342344,[80305]=384683,[80146]=153561,[80162]=108839,[80178]=235313,[80194]=384374,[80210]=384187,[80226]=205021,[80242]=84714,[80258]=2120,[80274]=86949,[80290]=157980,[80306]=44425,[80147]=31661,[80163]=212653,[80179]=390218,[80195]=384452,[80243]=44614,[80227]=112965,[102428]=378756,[80259]=205037,[80275]=190319,[80291]=383676,[102429]=385167, },
	[750] = { [96165]=253593,[96181]=343294,[96197]=48263,[96213]=48792,[96229]=47568,[96245]=49143,[96261]=377668,[96277]=219786,[96293]=390279,[96309]=195679,[96325]=46584,[96166]=391477,[96182]=206967,[96198]=391546,[96214]=373923,[96230]=377190,[96246]=49020,[96262]=377655,[96278]=194679,[96294]=194917,[96310]=276023,[96326]=85948,[96167]=391386,[96183]=374261,[96199]=48707,[96215]=373930,[96231]=207057,[96247]=51128,[96263]=205723,[96279]=195292,[96295]=207317,[96311]=49206,[96327]=55090,[96168]=391517,[96184]=356367,[96200]=49998,[96216]=207104,[96232]=376251,[96248]=376905,[96264]=114556,[96280]=317610,[96296]=115989,[96312]=377514,[96328]=77575,[96169]=391458,[96185]=273952,[96201]=46585,[96217]=391566,[96233]=316803,[96249]=317198,[96265]=206970,[96281]=390236,[96297]=377585,[96313]=390275,[96329]=316867,[96170]=374715,[96186]=276079,[96202]=316916,[96218]=317214,[96234]=51271,[96250]=377076,[96266]=221536,[96282]=390196,[96298]=207269,[96314]=49530,[96330]=390161,[96171]=273953,[96187]=374265,[96203]=327574,[96219]=81333,[96235]=207142,[96251]=377073,[96267]=108199,[96283]=390259,[96299]=207264,[96315]=152280,[96331]=316941,[96172]=207167,[96188]=111673,[96204]=374049,[96220]=281238,[96236]=377226,[96252]=207061,[96268]=273946,[96284]=377440,[96300]=374737,[96316]=319230,[96332]=390268,[96173]=378848,[96189]=392566,[96205]=374111,[96221]=194913,[96237]=376938,[96253]=377098,[96269]=49028,[96285]=207289,[96301]=377629,[96317]=194916,[96333]=42650,[96174]=205727,[96190]=374504,[96206]=48743,[96222]=152279,[96238]=377092,[96254]=377083,[96270]=219809,[96286]=377590,[96302]=206974,[96318]=207272,[96334]=377592,[96175]=373926,[96191]=389679,[96207]=212552,[96223]=377047,[96239]=194912,[96255]=374747,[96271]=206940,[96287]=276837,[96303]=195182,[96319]=390175,[96176]=374383,[96192]=389682,[96208]=374598,[96224]=279302,[96240]=57330,[96256]=391398,[96272]=317133,[96288]=377587,[96304]=206930,[96320]=207311,[96161]=392950,[96177]=383269,[96193]=221562,[96209]=374574,[96225]=207230,[96241]=316838,[96257]=374717,[96273]=194662,[96289]=390283,[96305]=50842,[96321]=377580,[96162]=207126,[96178]=47568,[96194]=51052,[96210]=45524,[96226]=377376,[96242]=196770,[96258]=194844,[96274]=221699,[96290]=390270,[96306]=81136,[96322]=275699,[96163]=281208,[96179]=194878,[96195]=374030,[96211]=47528,[96227]=377351,[96243]=59057,[96259]=377640,[96275]=274156,[96291]=277234,[96307]=391395,[96323]=390166,[96164]=377056,[96180]=391571,[96196]=374277,[96212]=207200,[96228]=305392,[96244]=49184,[96260]=377637,[96276]=206931,[96292]=377537,[96308]=55233,[96324]=63560, },
	[795] = { [103767]=34861,[103783]=373427,[103799]=341273,[103815]=392507,[103831]=110744,[103847]=373456,[103863]=321291,[103688]=238135,[103704]=214621,[103720]=390684,[103736]=392988,[103752]=193155,[103768]=196489,[103784]=391228,[103800]=377065,[103816]=391288,[103832]=373466,[103848]=341167,[103864]=32379,[103705]=372969,[103721]=322115,[103737]=235587,[103753]=200199,[103769]=391208,[103785]=377387,[103801]=288733,[103817]=373273,[103833]=390972,[103849]=32375,[103865]=34433,[103674]=228260,[103690]=373003,[103706]=314867,[103722]=194509,[103738]=372611,[103754]=341997,[103770]=200128,[103786]=391296,[103802]=391095,[103818]=390996,[103834]=108942,[103850]=390622,[103866]=393870,[103675]=372760,[103691]=246287,[103707]=373065,[103723]=81749,[103739]=372616,[103755]=64843,[103771]=196707,[103787]=373310,[103803]=205385,[103819]=391112,[103835]=373446,[103851]=132157,[103867]=528,[103676]=391124,[103692]=238063,[103708]=372985,[103724]=198068,[103740]=391387,[103756]=391161,[103772]=196437,[103788]=200174,[103804]=375994,[103820]=108968,[103836]=390670,[103852]=390620,[103868]=73325,[103677]=390767,[103693]=215768,[103709]=373054,[103725]=372972,[103741]=391381,[103757]=391209,[103773]=200209,[103789]=375767,[103805]=375888,[103821]=108945,[103837]=375901,[103853]=121536,[103869]=139,[103678]=205364,[103694]=390786,[103710]=123040,[103726]=390686,[103742]=265202,[103758]=204883,[103774]=47788,[103790]=263346,[103806]=47585,[103822]=373481,[103838]=373223,[103854]=213634,[103870]=33076,[103679]=263165,[103695]=390770,[103711]=390832,[103727]=47536,[103743]=200183,[103759]=390881,[103775]=2050,[103791]=238558,[103807]=48045,[103823]=109186,[103839]=390668,[103855]=390632,[103871]=372354,[103680]=391109,[103696]=390705,[103712]=373427,[103728]=197419,[103744]=390994,[103760]=321377,[103776]=88625,[103792]=15487,[103808]=335467,[103824]=368275,[103840]=199855,[103856]=64129,[103872]=390667,[103681]=391399,[103697]=373180,[103713]=33206,[103729]=390691,[103745]=391368,[103761]=390947,[103777]=372307,[103793]=64044,[103809]=341491,[103825]=238100,[103841]=15286,[103857]=390615,[103873]=377438,[103682]=391090,[103698]=390781,[103714]=373035,[103746]=391339,[103762]=390954,[103778]=391154,[103794]=263716,[103810]=391284,[103826]=373450,[103842]=280749,[103858]=193063,[108225]=391079,[103683]=373212,[103699]=390765,[103715]=372991,[103731]=390693,[103747]=372370,[103763]=390980,[103779]=193157,[103795]=391242,[103811]=155271,[103827]=120644,[103843]=9484,[103859]=108920,[108226]=373049,[103684]=373202,[103700]=373178,[103716]=129250,[103732]=47515,[103748]=390967,[103764]=196985,[103780]=391233,[103796]=341374,[103812]=73510,[103828]=122121,[103844]=10060,[103860]=390919,[103685]=391235,[103701]=373042,[103717]=197045,[103733]=372835,[103749]=391186,[103765]=238136,[103781]=373280,[103797]=373221,[103813]=162448,[103829]=373457,[103845]=196704,[103861]=377422,[103686]=391137,[103702]=193134,[103718]=204197,[103734]=390992,[103750]=390977,[103766]=596,[103782]=377349,[103798]=341240,[103814]=199484,[103830]=120517,[103846]=390676,[103862]=605,[103687]=62618,[103703]=390689,[103719]=390685,[103735]=372309,[103751]=64901, },
	[790] = { [102492]=383350,[102508]=204054,[102524]=343721,[102540]=183998,[102556]=392928,[102572]=392951,[102588]=385639,[102604]=1022,[102620]=385464,[102445]=31850,[102461]=393071,[102477]=393024,[102493]=384052,[102509]=387196,[102525]=383304,[102541]=214202,[102557]=231667,[102573]=200652,[102589]=234299,[102621]=377053,[102430]=204019,[102446]=378762,[102462]=280373,[102478]=377043,[102494]=383300,[102510]=384162,[102526]=383276,[102542]=157047,[102558]=387791,[102574]=200474,[102590]=231663,[102606]=384909,[102622]=10326,[102431]=53595,[102447]=389539,[102463]=386568,[102479]=24275,[102495]=255937,[102511]=343527,[102527]=326734,[102543]=223306,[102559]=388005,[102575]=383388,[102591]=96231,[102607]=105809,[102623]=377016,[102432]=379022,[102448]=31884,[102464]=379017,[102480]=387170,[102496]=231895,[102512]=384027,[102528]=85804,[102544]=387998,[102560]=114165,[102576]=387170,[102592]=230332,[102608]=223817,[102624]=376996,[102433]=385422,[102449]=378279,[102465]=375576,[102481]=383396,[102497]=31884,[102513]=375576,[102529]=203316,[102545]=85222,[102561]=114158,[102577]=392907,[102593]=31884,[102609]=385425,[102625]=190784,[102434]=378457,[102450]=379008,[102466]=387174,[102482]=383263,[102498]=184575,[102514]=383388,[102530]=269569,[102546]=200430,[114292]=231644,[102578]=248033,[102594]=384914,[102610]=152262,[102435]=378845,[102451]=379021,[102467]=321136,[102483]=383314,[102499]=386967,[102515]=183218,[102531]=382275,[102547]=392911,[102563]=375576,[102579]=388007,[102595]=384820,[102611]=31884,[102436]=204023,[102452]=393030,[102468]=209389,[102484]=383328,[102500]=383254,[102516]=383185,[102532]=200025,[102548]=31821,[102564]=387781,[102580]=196926,[102596]=183778,[102612]=385450,[102437]=378285,[102453]=85043,[102469]=378425,[102485]=383274,[102501]=53385,[102517]=383334,[102533]=156910,[102549]=498,[102565]=392938,[102581]=325966,[102597]=385515,[102613]=385416,[102438]=315924,[102454]=378974,[102470]=385726,[102486]=205191,[102502]=383228,[102518]=382430,[102534]=20473,[102550]=82326,[102566]=387879,[102582]=387893,[102598]=377128,[102614]=385129,[102439]=393022,[102455]=152261,[102471]=31935,[102487]=215661,[102503]=267610,[102519]=382536,[102535]=387801,[102551]=210294,[102567]=200482,[102583]=633,[102599]=384897,[102615]=385125,[102440]=204074,[102456]=86659,[102472]=378405,[102488]=387640,[102504]=326732,[102520]=498,[102536]=392961,[102552]=392902,[102568]=216331,[102584]=115750,[102600]=384815,[102616]=391142,[102457]=386653,[102473]=204077,[102489]=383344,[102505]=383271,[102521]=184662,[102537]=148039,[102553]=387786,[102569]=31884,[102585]=20066,[102601]=385414,[102617]=385728,[102442]=379391,[102458]=393027,[102474]=327193,[102490]=386901,[102506]=383876,[102522]=383342,[102538]=388018,[102554]=392914,[102570]=387805,[102586]=385633,[102602]=6940,[102618]=385427,[102443]=386738,[102459]=204054,[102475]=383388,[102491]=231832,[102507]=387479,[102523]=267344,[102539]=387814,[102555]=387993,[102571]=231642,[102587]=1044,[102603]=114154,[102619]=385349,[111887]=393114,[102562]=387808,[102444]=379043,[102460]=380188,[102476]=213644,[111886]=204018, },
	[786] = { [101982]=192063,[101998]=5394,[101807]=333974,[101823]=33757,[101839]=384363,[101855]=61882,[101871]=385923,[101887]=378266,[101903]=52127,[101919]=200071,[101935]=382021,[101951]=1064,[101967]=378773,[101983]=58875,[101999]=378094,[101808]=334195,[101824]=384352,[101840]=187874,[101856]=378776,[101872]=333919,[101888]=378255,[101904]=77472,[101920]=381946,[101936]=382315,[101952]=198103,[101968]=370,[101984]=381678,[102000]=108281,[101809]=201900,[101825]=319930,[101841]=197214,[101857]=381743,[101873]=262303,[101889]=381726,[101905]=61295,[101921]=378443,[101937]=197995,[101953]=378077,[101969]=51886,[101985]=383012,[102001]=381930,[101810]=196884,[101826]=384355,[101842]=207778,[101858]=378241,[101874]=273221,[101890]=382032,[101906]=200076,[101922]=383222,[101938]=378270,[101954]=192088,[101970]=378079,[101986]=383011,[102002]=381867,[101811]=390370,[101827]=210853,[101843]=386443,[101859]=382685,[101875]=381787,[101891]=375982,[101907]=383009,[101923]=73920,[101939]=382194,[101955]=79206,[101971]=204268,[101987]=108285,[102003]=383010,[114291]=114051,[101812]=334046,[101828]=382042,[101844]=382042,[101860]=191634,[101876]=381785,[101892]=191861,[101908]=382197,[101924]=382019,[101940]=382029,[101956]=382886,[101972]=51514,[101988]=382033,[102004]=974,[101813]=384444,[101829]=384405,[101845]=386474,[101861]=381936,[101877]=114050,[101893]=381707,[101909]=207401,[101925]=157154,[101941]=382020,[101957]=57994,[101973]=108287,[101989]=383013,[101814]=384411,[101830]=375982,[101846]=77756,[101862]=384087,[101878]=378270,[101894]=77756,[101910]=382039,[101926]=382045,[101942]=114052,[101958]=8143,[101974]=30884,[101990]=382201,[101799]=382197,[101815]=384450,[101831]=117014,[101847]=381764,[101863]=191634,[101879]=16166,[101895]=382030,[101911]=382732,[101927]=382309,[101943]=377933,[101959]=381819,[101975]=51485,[101991]=383019,[101800]=393905,[101816]=378270,[101832]=392352,[101848]=378211,[101864]=210689,[101880]=381782,[101896]=16166,[101912]=108280,[101928]=333919,[101944]=381647,[101960]=265046,[101976]=192077,[101992]=383017,[101801]=384149,[101833]=390288,[101849]=192249,[101865]=378271,[101881]=378310,[101897]=378211,[101913]=98008,[101929]=16191,[101945]=108271,[101961]=192058,[101977]=382947,[101993]=305483,[101802]=384143,[101818]=334308,[101834]=262647,[101850]=198067,[101866]=117014,[101882]=378268,[101898]=280614,[101914]=382040,[101930]=207399,[101946]=381666,[101962]=378075,[101978]=381650,[101994]=378779,[101803]=8512,[101819]=344357,[101835]=198434,[101851]=382197,[101867]=381708,[101883]=381932,[101899]=51564,[101915]=382046,[101931]=198838,[101947]=382888,[101963]=260878,[101979]=381689,[101995]=51490,[101804]=17364,[101820]=384359,[101836]=262624,[101852]=378193,[101868]=382086,[101884]=192222,[101900]=5394,[101916]=382191,[101932]=200072,[101948]=187880,[101964]=383016,[101980]=381655,[101996]=381674,[101805]=60103,[101821]=342240,[101837]=384447,[101853]=60188,[101869]=381776,[101885]=117013,[101901]=378241,[101917]=375982,[101933]=157153,[101949]=188443,[101965]=196840,[101981]=382215,[101997]=378081,[101806]=334033,[101822]=383303,[101838]=51533,[101854]=8042,[101870]=210714,[101886]=382027,[101902]=16196,[101918]=73685,[101934]=382482,[101950]=51505,[101966]=51886, },
	[793] = { [112963]=197628,[103289]=2637,[103305]=192081,[103321]=102793,[103098]=383192,[103114]=392325,[103130]=391969,[103146]=155580,[103162]=106951,[103178]=102543,[103194]=393611,[109840]=394046,[109856]=390378,[109872]=393954,[103274]=377801,[103290]=24858,[103306]=16931,[103322]=102359,[103099]=145108,[103115]=203651,[103131]=392116,[103147]=393771,[103163]=202031,[103179]=391875,[103195]=231064,[109841]=202347,[109857]=393958,[109873]=393940,[103275]=252216,[103291]=33786,[103307]=2908,[103323]=29166,[103100]=33763,[103116]=207385,[103132]=392099,[103148]=391785,[103164]=48484,[103180]=61336,[103196]=200854,[109842]=279620,[103228]=372618,[103276]=102401,[103292]=33873,[103308]=288826,[103324]=124974,[103101]=132158,[103117]=383191,[103133]=392160,[103149]=384668,[103165]=384667,[103181]=391045,[103197]=135288,[109843]=327541,[109859]=202770,[103277]=1822,[103293]=2782,[103309]=319454,[103325]=378986,[103102]=382550,[103118]=393371,[103134]=392302,[103150]=390864,[103166]=391174,[103182]=384665,[103198]=370586,[109844]=205636,[109860]=274281,[103278]=197626,[103294]=18562,[103310]=108238,[103326]=377847,[103103]=392288,[103119]=391528,[103135]=326228,[103151]=202028,[103167]=16974,[103183]=390772,[103199]=393414,[109845]=202918,[109861]=202342,[112965]=197625,[103279]=194153,[103295]=774,[103311]=378988,[103229]=377811,[103225]=203974,[103104]=102351,[103120]=33891,[103136]=197721,[103152]=391881,[103168]=391872,[103184]=285381,[103200]=391528,[109846]=114107,[109862]=202430,[103209]=203962,[109831]=383197,[103280]=78674,[103296]=301768,[103312]=106898,[103213]=238049,[112968]=197625,[103105]=207383,[103121]=392256,[103137]=392410,[103153]=391347,[103169]=391078,[103185]=383352,[103201]=102558,[109847]=394121,[109863]=391969,[109848]=394048,[112967]=197628,[103281]=392378,[103297]=327993,[103313]=377842,[109858]=79577,[103214]=203964,[103106]=392162,[103122]=391951,[103138]=382559,[103154]=391978,[103170]=274837,[103186]=202021,[103202]=391969,[103218]=372119,[109864]=393991,[109832]=202345,[112964]=197628,[103282]=2782,[103298]=22842,[103314]=385786,[103232]=345208,[103231]=203953,[103107]=197073,[103123]=391888,[103139]=382552,[103155]=386318,[103171]=319439,[103187]=16864,[103203]=370695,[109849]=194223,[109865]=394115,[109833]=191034,[103230]=155835,[103283]=2782,[103299]=22570,[103315]=5211,[103226]=393427,[103224]=50334,[103108]=740,[103124]=392315,[103140]=197061,[103156]=391969,[103172]=391972,[103188]=5217,[103204]=393618,[109850]=393760,[103208]=158477,[103212]=372567,[103219]=377210,[103284]=377796,[103300]=1079,[103316]=99,[103205]=155578,[103221]=204053,[103109]=231032,[103125]=392356,[103141]=102342,[103157]=158476,[103173]=390902,[103189]=377835,[109835]=343647,[109851]=394094,[109867]=78675,[103227]=371999,[103217]=300346,[103285]=231050,[103301]=106832,[103317]=159286,[103222]=80313,[103094]=50464,[103110]=200390,[103126]=392124,[103142]=392220,[103158]=391947,[103174]=391951,[103190]=210706,[109836]=394058,[109852]=394065,[109868]=393868,[103206]=371905,[103207]=200851,[103286]=93402,[103302]=106839,[103318]=131768,[103223]=372945,[103095]=392301,[103111]=145205,[103127]=155675,[103143]=113043,[103159]=231063,[103175]=391888,[103191]=6807,[109837]=392999,[109853]=383195,[109869]=202425,[103210]=203965,[103211]=50334,[103287]=132469,[103303]=108299,[103319]=231040,[103216]=50334,[103096]=328025,[103112]=278515,[103128]=392167,[103144]=391037,[103160]=391709,[103176]=391548,[103192]=328767,[109838]=391528,[109854]=88747,[109870]=394081,[103220]=372943,[109834]=393956,[103288]=197524,[103304]=213764,[103320]=48438,[112966]=197625,[103097]=392221,[103113]=158478,[103129]=274902,[103145]=391700,[103161]=236068,[103177]=391528,[103193]=61336,[109839]=394013,[109855]=393960,[109871]=202359,[103215]=384721, },
}

local talentIDFix = { [103211]=377779,[103216]=343240,[103224]=377623, }
local talentChargeFix = { [36554]=true,[191634]=true,[47568]=true, }

local MAX_NUM_TALENTS = MAX_NUM_TALENTS or (E.isWOTLKC and 31 or 25)

local GetSelectedTalentData = (E.isDF and function(info, inspectUnit, isInspect)
	local list, c
	if not isInspect then
		list, c = { CM.SERIALIZATION_VERSION, true, "^T" }, 4
	end

	for i = 1, 3 do
		local talentID
		if isInspect then
			talentID = C_SpecializationInfo_GetInspectSelectedPvpTalent(inspectUnit, i)
		else
			local slotInfo = C_SpecializationInfo_GetPvpTalentSlotInfo(i)
			talentID = slotInfo and slotInfo.selectedTalentID
		end
		if talentID then
			local _,_,_,_,_, spellID = GetPvpTalentInfoByID(talentID)
			info.talentData[spellID] = "PVP"
			if list then
				list[c] = -spellID
				c = c + 1
			end
		end
	end

	local configID = isInspect and Constants.TraitConsts.INSPECT_TRAIT_CONFIG_ID or C_ClassTalents.GetActiveConfigID()
	local configInfo = configID and C_Traits.GetConfigInfo(configID)
	if not configInfo then
		return list
	end
	local treeIDs = configInfo.treeIDs
	if #treeIDs > 1 then
		error("Error getting treeID. More than 1 found")
	end
	local treeID = treeIDs[1]

	local nodeEntryIDs = treeNodeEntryIDs[treeID]
	local nodeSpellIDs = treeNodeSpellIDs[treeID]
	local treeNodes = C_Traits.GetTreeNodes(treeID)
	for i, treeNodeID in ipairs(treeNodes) do
		local treeNode = C_Traits_GetNodeInfo(configID, treeNodeID)
		local activeEntry = treeNode.activeEntry
		if activeEntry then
			local activeRank = treeNode.activeRank
			if activeRank > 0 then
				local activeEntryID = activeEntry.entryID
				local spellID = talentIDFix[activeEntryID] or (nodeEntryIDs and nodeEntryIDs[activeEntryID])
				if spellID then
					activeRank = talentChargeFix[spellID] and info.talentData[spellID] and 2 or activeRank
					info.talentData[spellID] = activeRank
					if list then
						spellID = nodeSpellIDs[spellID] or spellID
						list[c] = activeRank > 1 and format("%s:%s", spellID, activeRank) or spellID
						c = c + 1
					end
				end
			end
		end
	end

	return list
end) or (E.isSL and function(info, inspectUnit, isInspect)
	local list
	if not isInspect then
		list = { CM.SERIALIZATION_VERSION, true, "^T" }
	end

	for i = 1, 3 do
		local talentID
		if isInspect then
			talentID = C_SpecializationInfo_GetInspectSelectedPvpTalent(inspectUnit, i)
		else
			local slotInfo = C_SpecializationInfo_GetPvpTalentSlotInfo(i)
			talentID = slotInfo and slotInfo.selectedTalentID
		end
		if talentID then
			local _,_,_,_,_, spellID = GetPvpTalentInfoByID(talentID)
			info.talentData[spellID] = "PVP"
			if list then list[#list + 1] = -spellID end
		end
	end

	local specGroupIndex = 1
	for tier = 1, MAX_TALENT_TIERS do
		for column = 1, NUM_TALENT_COLUMNS do
			local _,_,_, selected, _, spellID = GetTalentInfo(tier, column, specGroupIndex , isInspect, inspectUnit)
			if selected then
				info.talentData[spellID] = true
				if list then list[#list + 1] = spellID end
				break
			end
		end
	end

	return list
end) or (E.isWOTLKC and function(info, inspectUnit, isInspect)
	local list
	if not isInspect then
		list = { CM.SERIALIZATION_VERSION, true, "^T" }
	end

	if list then
		for i = 1, 6 do
			local _,_, glyphSpellID = GetGlyphSocketInfo(i)
			if glyphSpellID then
				info.talentData[glyphSpellID] = true
				list[#list + 1] = glyphSpellID
			end
		end
	end

	local talentGroup = GetActiveTalentGroup and GetActiveTalentGroup(true, nil)
	for tabIndex = 1, 3 do
		for talentIndex = 1, MAX_NUM_TALENTS do
			local name, _,_,_, currentRank = GetTalentInfo(tabIndex, talentIndex, isInspect, inspectUnit, talentGroup)
			if not name then
				break
			end
			if currentRank > 0 then
				local talentRankIDs = E.talentNameToRankIDs[name]
				if talentRankIDs then
					if type(talentRankIDs[1]) == "table" then
						for _, t in pairs(talentRankIDs) do
							local talentID = t[currentRank]
							if talentID then
								info.talentData[talentID] = true
								if list then list[#list + 1] = talentID end
							end
						end
					else
						local talentID = talentRankIDs[currentRank]
						if talentID then
							info.talentData[talentID] = true
							if list then list[#list + 1] = talentID end
						end
					end
				end
			end
		end
	end

	return list
end) or function(info, inspectUnit, isInspect)
	if E.isClassic and isInspect then
		return
	end

	local list
	if not isInspect then
		list = { CM.SERIALIZATION_VERSION, true, "^T" }
	end

	for tabIndex = 1, 3 do
		for talentIndex = 1, MAX_NUM_TALENTS do
			local name, _,_,_, currentRank = GetTalentInfo(tabIndex, talentIndex, isInspect, inspectUnit)
			if not name then
				break
			end
			if currentRank > 0 then
				local talentRankIDs = E.talentNameToRankIDs[name]
				if talentRankIDs then
					if type(talentRankIDs[1]) == "table" then
						for _, t in pairs(talentRankIDs) do
							local talentID = t[currentRank]
							if talentID then
								info.talentData[talentID] = true
								if list then list[#list + 1] = talentID end
							end
						end
					else
						local talentID = talentRankIDs[currentRank]
						if talentID then
							info.talentData[talentID] = true
							if list then list[#list + 1] = talentID end
						end
					end
				end
			end
		end
	end

	return list
end

function CM:InspectUnit(guid)
	local info = P.groupInfo[guid]
	if not info or self.syncedGroupMembers[guid] then
		ClearInspectPlayer()
		return
	end

	local inspectUnit = info.unit
	local specID = E.preCata and info.raceID or GetInspectSpecialization(inspectUnit)
	if not specID or specID == 0 then
		return
	end
	info.spec = specID
	if info.name == "" or info.name == "Unknown" then
		info.name = GetUnitName(inspectUnit, true)
	end
	if info.level == 200 then
		local lvl = UnitLevel(inspectUnit)
		if lvl > 0 then
			info.level = lvl
		end
	end
	if not E.preCata then
		info.spellHasteMult = 1/(1 + UnitSpellHaste(info.unit)/100)
	end

	wipe(info.talentData)
	wipe(info.itemData)

	GetSelectedTalentData(info, inspectUnit, true)
	local failed = GetEquippedItemData(info, inspectUnit, specID)

	ClearInspectPlayer()
	self:DequeueInspect(guid, failed)
	P:UpdateUnitBar(guid)
end

local enhancedSoulbindRowRenownLevel = {
	[1]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[2]  = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[3]  = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
	[4]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[5]  = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[6]  = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
	[7]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[8]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[9]  = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[10] = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
	[13] = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[18] = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
}

local function IsSoulbindRowEnhanced(soulbindID, row, renownLevel)
	local minLevel = enhancedSoulbindRowRenownLevel[soulbindID] and enhancedSoulbindRowRenownLevel[soulbindID][row]
	if minLevel then
		return renownLevel >= minLevel
	end
end

local function GetCovenantSoulbindData(info, list)
	wipe(info.shadowlandsData)

	local covenantID = C_Covenants.GetActiveCovenantID()
	if covenantID == 0 then
		return
	end

	local covenantSpellID = E.covenant_to_spellid[covenantID]
	info.shadowlandsData.covenantID = covenantID
	info.talentData[covenantSpellID] = "C"
	list[#list + 1] = "^C," .. covenantID

	local soulbindID = C_Soulbinds.GetActiveSoulbindID()
	if soulbindID == 0 then
		return
	end
	info.shadowlandsData.soulbindID = soulbindID
	list[#list + 1] = soulbindID

	local soulbindData = C_Soulbinds.GetSoulbindData(soulbindID)
	local nodes = soulbindData.tree and soulbindData.tree.nodes
	if not nodes then
		return
	end

	local renownLevel = C_CovenantSanctumUI.GetRenownLevel()
	for i = 1, #nodes do
		local node = nodes[i]
		if node.state == Enum.SoulbindNodeState.Selected then
			local conduitID, conduitRank, row, spellID = node.conduitID, node.conduitRank, node.row, node.spellID
			if conduitID ~= 0 then
				spellID = C_Soulbinds_GetConduitSpellID(conduitID, conduitRank)
				if IsSoulbindRowEnhanced(soulbindID, row, renownLevel) then
					conduitRank = conduitRank + 2
				end
				local rankValue = E.soulbind_conduits_rank[spellID] and (E.soulbind_conduits_rank[spellID][conduitRank] or E.soulbind_conduits_rank[spellID][1])
				if rankValue then
					info.talentData[spellID] = rankValue
					list[#list + 1] = format("%s:%s", spellID, rankValue)
				end
			elseif E.soulbind_abilities[spellID] then
				info.talentData[spellID] = 0
				list[#list + 1] = spellID
			end
		end
	end
end

local function FindValidSpellID(info, v)
	if type(v) ~= "table" then
		return info.spec == v or (info.talentData[v] and true)
	end
	if v[1] > 0 then
		for id in pairs(v) do
			if info.talentData[id] then
				return true
			end
		end
	else
		local spellID
		for i = 1, #v, 2 do
			local tid, sid = v[i], v[i + 1]
			tid = i == 1 and -tid or tid
			spellID = info.talentData[tid] and sid
		end
		return spellID or true
	end
end

function CM:UpdateCooldownSyncIDs(info)
	if E.preCata or info.isAdminObsForMDI then return end
	wipe(self.cooldownSyncIDs)
	for id, t in E.pairs(E.sync_cooldowns.ALL, E.sync_cooldowns[E.userClass]) do
		local spellID
		for _, v in ipairs(t) do
			spellID = not v or FindValidSpellID(info, v)
			if not spellID then break end
		end
		if spellID then
			self.cooldownSyncIDs[spellID == true and id or spellID] = { 0, 0 }
		end
	end
	self:ToggleCooldownSync()
end

function CM:InspectUser()
	local info = P.userInfo
	local specID
	if E.preCata then
		specID = info.raceID
	else
		local specIndex = GetSpecialization()
		specID = GetSpecializationInfo(specIndex)
	end
	if not specID or specID == 0 then
		return false
	end
	info.spec = specID

	wipe(info.talentData)
	wipe(info.itemData)

	local dataList = GetSelectedTalentData(info, "player")
	GetEquippedItemData(info, "player", specID, dataList)
	if E.postBFA then
		GetCovenantSoulbindData(info, dataList)
		info.spellHasteMult = 1/(1 + UnitSpellHaste("player")/100)

	elseif E.isClassic or E.isBCC then
		local speed = UnitRangedDamage("player")
		if speed and speed > 0 then
			info.rangedWeaponSpeed = speed
			dataList[#dataList + 1] = -speed
		end
	end

	dataList[2] = specID
	local serializedData = concat(dataList, ","):gsub(",%^", "^")
	local compressedData = LibDeflate:CompressDeflate(serializedData)
	local encodedData = LibDeflate:EncodeForWoWAddonChannel(compressedData)
	self.serializedSyncData = encodedData

	self:UpdateCooldownSyncIDs(info)

	if P.groupInfo[E.userGUID] then
		P:UpdateUnitBar(E.userGUID)
	end

	return true
end
